{"version":3,"file":"static/js/39.56ad715e.chunk.js","mappings":"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","sources":["custom/project-a/constants/code-examples/tag-usage.tsx","custom/project-a/constants/code-examples/index.tsx","custom/project-a/constants/code-examples/basic-usage.tsx","custom/project-a/constants/code-examples/modifiers-usage.tsx","custom/project-a/constants/code-examples/content-usage.tsx","custom/project-a/constants/code-examples/config-usage.tsx","custom/project-a/data/data-by-page/index-page.ts","custom/project-a/data/data-by-page/index.ts","custom/project-a/data/useGetData.ts","custom/project-a/layout/default/default.tsx","custom/project-a/modules/code-example/code-example.tsx","custom/project-a/pages/index/template.tsx","shared/models/literals.ts","shared/utils/index.ts","shared/hooks/use-value-from-list.ts"],"sourcesContent":["import { CE } from 'react-content-elements';\nimport React from 'react';\nimport { CodeExampleTemplate } from 'src/custom/project-a/modules';\n\nexport const TAG_USAGE: Array<CodeExampleTemplate> = [\n  {\n    el: <CE.Text>Text Content Element</CE.Text>,\n    stringified: `<CE.Text>Text Content Element</CE.Text>`,\n  },\n  {\n    el: <CE.Text modifiers={['title']}>Example with modifier</CE.Text>,\n    stringified: `<CE.Text modifiers={['title']}>Example with modifier</CE.Text>`,\n  },\n  {\n    el: (\n      <CE.Text modifiers={['title']} tag='h1'>\n        Example with \"h1\" tag\n      </CE.Text>\n    ),\n    stringified: `<CE.Text modifiers={['title']} tag=\"h1\">Example with \"h1\" tag</CE.Text>`,\n  },\n  {\n    el: <CE.Text config={{ content: 'Hello world!', tag: 'h3' }}>Example with config</CE.Text>,\n    stringified: `<CE.Text config={{ content: \"Hello world!\", tag: 'h3' }}>Example with config</CE.Text>`,\n  },\n  {\n    el: <CE.Block>Block Content Element</CE.Block>,\n    stringified: `<CE.Block>Block Content Element</CE.Block>`,\n  },\n  {\n    el: <CE.Block tag='section'>Example with section tag</CE.Block>,\n    stringified: `<CE.Block tag=\"section\">Example with section tag</CE.Block>`,\n  },\n];\n","import { TAG_USAGE } from './tag-usage';\nimport { BASIC_USAGE } from './basic-usage';\nimport { MODIFIERS_FEATURES_USAGE, MODIFIERS_USAGE } from './modifiers-usage';\nimport { CONTENT_USAGE } from './content-usage';\nimport { CONFIG_USAGE } from './config-usage';\n\nexport const CODE_EXAMPLES = {\n  BASIC_USAGE,\n  TAG_USAGE,\n  MODIFIERS_USAGE,\n  MODIFIERS_FEATURES_USAGE,\n  CONTENT_USAGE,\n  CONFIG_USAGE,\n};\n","import { CE } from 'react-content-elements';\nimport React from 'react';\nimport { CodeExampleTemplate } from 'src/custom/project-a/modules';\n\nexport const BASIC_USAGE: Array<CodeExampleTemplate> = [\n  {\n    el: <CE.Text modifiers={['accent']}>Hello world!</CE.Text>,\n    stringified: `<CE.Text modifiers={[\"accent\"]}>Hello world!</CE.Text>`,\n  },\n  {\n    el: <CE.Text config={{ content: 'Hello world!', modifiers: ['title'] }} />,\n    stringified: `<CE.Text config={{ content: \"Hello world!\", modifiers: ['title'] }} />`,\n  },\n  {\n    el: <CE.Image src='path/to/image.jpg' />,\n    stringified: `<CE.Image src=\"path/to/image.jpg\" />`,\n  },\n];\n","import { CE } from 'react-content-elements';\nimport React from 'react';\nimport { CodeExampleTemplate } from 'src/custom/project-a/modules';\n\nexport const MODIFIERS_USAGE: Array<CodeExampleTemplate> = [\n  {\n    el: <CE.Text modifiers={['accent']} config='Hello world!' />,\n    stringified: `<CE.Text modifiers={['accent']} config=\"Hello world!\" />`,\n  },\n  {\n    el: <CE.Text modifiers={['title']} config='Hello world!' />,\n    stringified: `<CE.Text modifiers={['title']} config=\"Hello world!\" />`,\n  },\n  {\n    el: <CE.Text tag='h1' modifiers={['title']} config='Hello world!' />,\n    stringified: `<CE.Text tag=\"h1\" modifiers={['title']} config=\"Hello world!\" />`,\n  },\n  {\n    el: <CE.Text config={{ modifiers: ['title'], content: 'Hello World!' }} />,\n    stringified: `<CE.Text config={{ modifiers: [\"title\"], content: \"Hello World!\" }} />`,\n  },\n  {\n    el: <CE.Text modifiers={['title', 'accent']}>Hello world!</CE.Text>,\n    stringified: `<CE.Text modifiers={[\"title\", \"accent\"]}>Hello world!</CE.Text>`,\n  },\n  {\n    el: <CE.Block modifiers={['container', 'section']}>Hello world!</CE.Block>,\n    stringified: `<CE.Block modifiers={[\"container\", \"section\"]}>Hello world!</CE.Block>`,\n  },\n];\n\nexport const MODIFIERS_FEATURES_USAGE = {\n  aboveAndBeyond: [\n    {\n      el: <CE.Text modifiers={['title-above-xl', 'accent-beyond-sm']}>Hello world!</CE.Text>,\n      stringified: `<CE.Text modifiers={[\"title-above-xl\", \"accent-beyond-sm\"]}>Hello world!</CE.Text>`,\n    },\n    {\n      el: <CE.Block modifiers={['row-above-md', 'section-below-xl']}>Hello world!</CE.Block>,\n      stringified: `<CE.Block modifiers={[\"row-above-md\", \"section-below-xl\"]}>Hello world!</CE.Block>`,\n    },\n  ],\n  size: [\n    {\n      el: <CE.Text modifiers={['md', 'xl-above-md']}>Hello world!</CE.Text>,\n      stringified: `<CE.Text modifiers={[\"md\", \"xl-above-md\"]}>Hello world!</CE.Text>`,\n    },\n  ],\n} as const;\n","import { CE } from 'react-content-elements';\nimport React from 'react';\nimport { CodeExampleTemplate } from 'src/custom/project-a/modules';\n\nexport const CONTENT_USAGE: Array<CodeExampleTemplate> = [\n  {\n    el: <CE.Text>Hello world!</CE.Text>,\n    stringified: `<CE.Text>Hello world!</CE.Text>`,\n  },\n  {\n    el: <CE.Text content='Content from property'>Hello world!</CE.Text>,\n    stringified: `<CE.Text content=\"Content from property\">Hello world!</CE.Text>`,\n  },\n  {\n    el: (\n      <CE.Text content='Content from property' config={{ content: 'Content by config' }}>\n        Hello world!\n      </CE.Text>\n    ),\n    stringified: `<CE.Text content=\"Content from property\" config={{ content: 'Content by config'}}>Hello world!</CE.Text>`,\n  },\n];\n","import { CE } from 'react-content-elements';\nimport React from 'react';\nimport { CodeExampleTemplate } from 'src/custom/project-a/modules';\n\nexport const CONFIG_USAGE: Array<CodeExampleTemplate> = [\n  {\n    el: (\n      <CE.Text\n        config={{\n          modifiers: ['title'],\n          content: 'Hello World!',\n        }}\n      />\n    ),\n    stringified: `<CE.Text config={{ modifiers: [\"title\"], content: \"Hello World!\" }} />`,\n  },\n  {\n    el: (\n      <CE.Text\n        tag='h1'\n        modifiers={['title']}\n        config={{\n          content: 'Hello World! By Config.',\n          tag: 'h2',\n          modifiers: ['accent'],\n        }}\n      >\n        Hello world!\n      </CE.Text>\n    ),\n    stringified: `<CE.Text\n                tag=\"h1\"\n                modifiers={['title']}\n                config={{\n                    content: \"Hello World! By Config.\",\n                    tag: 'h2',\n                    modifiers: [\"accent\"]\n                }}>\n                Hello world!\n            </CE.Text>`,\n  },\n];\n","export default {\n  header: {\n    rawContent: 'React Content Elements',\n    modifiers: ['main-header'],\n  },\n  subHeader: 'Your first Web Content Factory',\n  textBlocks: [\n    {\n      title: 'Web Content Development(WCD)',\n      text: {\n        rawContent:\n          '<b>Web Content Development</b> is appliance of your  <i>content data</i> to the digital page' +\n          '</br>It stands for CRUD operations with the <i>content data</i> of the page',\n      },\n      caption: '',\n    },\n    {\n      title: 'How did you solve it before?',\n      items: [\n        'Use UX lib or develop basic structures internally to get basic reusable structures',\n        'Apply UI lib or develop style system internally to describe the outlook of the code structures',\n        'Maintain the code structures and style system on a daily base',\n        'Refactor it due to changed requirements',\n      ],\n      caption: undefined,\n    },\n    {\n      title: 'Why bother?',\n      items: [\n        'Custom approach for basic structures architecture by company/team/developer',\n        'Custom approach for style system by company/team/developer',\n        'Duplicating same patterns by project',\n        'Endless refactoring to meet new requirements',\n      ],\n      caption: undefined,\n    },\n    {\n      title: 'Why React Content Elements?',\n      items: [\n        'Formalized HTML and CSS development pattern',\n        // 'Predefined and reusable basic HTML structures for content elements',\n        // 'Single and simple CSS styles structure',\n        // 'Scalable with custom solutions both in HTML and CSS structures',\n      ],\n      caption: undefined,\n    },\n  ],\n  options: [\n    {\n      image: {\n        src: 'https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea057.jpg',\n        srcSet: {\n          xs: 'https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea058.jpg',\n        },\n      },\n      // title: \"Option #1\",\n      // TODO FAQ: How to make it work?\n      title: {\n        rawContent: 'Option #1',\n      },\n      description: 'Description of option',\n    },\n    {\n      image:\n        'https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea057.jpg',\n      title: 'Option #2',\n      description: 'Description of option',\n    },\n    {\n      image:\n        'https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea057.jpg',\n      title: 'Option #3',\n      description: 'Description of option',\n    },\n  ],\n} as const;\n","import IndexPageData from './index-page';\n\nconst DATA_BY_PAGE = {\n  IndexPage: IndexPageData,\n};\n\nexport default DATA_BY_PAGE;\n","import DATA_BY_PAGE from './data-by-page';\nimport { PathToData, DataByPath } from './types';\n\nexport function useGetData<Path extends PathToData>(pathToData: Path): DataByPath<Path> {\n  // TODO: FIX TS\n  // @ts-ignore\n  return DATA_BY_PAGE[pathToData];\n}\n","import React from 'react';\nimport Test, { CE } from 'react-content-elements';\nimport { ContentElementConfig, ContentElementProps } from 'react-content-elements';\nimport { Header } from '../../components';\n\ninterface LayoutProps extends React.PropsWithChildren<Pick<ContentElementProps<'text'>, 'modifiers'>> {\n  className?: string;\n  title?: ContentElementConfig<'text'>;\n}\n\nexport const Layout = ({ modifiers = [], children, title, ...props }: LayoutProps) => {\n  return (\n    <CE.Block {...props} modifiers={['page', ...modifiers]}>\n      <CE.Block modifiers={['container']}>\n        <Header />\n        <CE.Text modifiers={['page-title']} config={title} />\n      </CE.Block>\n      <CE.Block tag='main' modifiers={['main']}>\n        {children}\n      </CE.Block>\n    </CE.Block>\n  );\n};\n","import React, { ReactElement, useContext } from 'react';\nimport { CE } from 'react-content-elements';\nimport { SHARED_UTILS } from 'src/shared';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { a11yDark, oneLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { ThemeContext } from 'src/custom/providers/theme';\n\ntype DisplayNameByIdMap = {\n  [CEKey in Lowercase<keyof typeof CE>]: `CE.${Capitalize<CEKey>}`;\n};\n\nconst DISPLAY_NAME_BY_ID = Object.keys(CE).reduce(\n  (r, k) => ({\n    ...r,\n    [k.toLowerCase()]: `CE.${SHARED_UTILS.capitalize(k)}`,\n  }),\n  {},\n) as DisplayNameByIdMap;\n\ntype DisplayNameById = typeof DISPLAY_NAME_BY_ID;\ntype DisplayNameIds = Array<keyof DisplayNameById>;\n\ntype CodeExampleProps = {\n  ex: CodeExampleTemplateProps | Array<CodeExampleTemplateProps> | ReadonlyArray<CodeExampleTemplateProps>;\n};\n\nexport const CodeExample = ({ ex }: CodeExampleProps) => {\n  if (Array.isArray(ex)) {\n    return (\n      <CE.List modifiers={['code-examples']}>\n        {ex.map((example) => (\n          <CodeExampleTemplate key={example.el.toString()} {...example} />\n        ))}\n      </CE.List>\n    );\n  }\n\n  return <CodeExampleTemplate key={ex.el.toString()} {...ex} />;\n};\n\ntype CodeExampleTemplateProps = {\n  el: ReactElement;\n  stringified: string;\n  id?: number | string;\n};\n\nexport type CodeExampleTemplate = CodeExampleTemplateProps;\n\nconst CodeExampleTemplate = ({ el, stringified }: CodeExampleTemplateProps) => {\n  const testRef = React.useRef<HTMLDivElement>(null);\n  const [innerHtml, setInnerHtml] = React.useState('');\n  const { theme } = useContext(ThemeContext);\n\n  React.useEffect(() => {\n    if (innerHtml === '' && testRef.current) {\n      setInnerHtml(testRef.current.innerHTML);\n    }\n  }, [innerHtml]);\n\n  return (\n    <CE.Block modifiers={['code-example']}>\n      <div ref={testRef} style={{ display: 'none' }}>\n        {el}\n      </div>\n      <SyntaxHighlighter language='javascript' style={theme === 'dark' ? a11yDark : oneLight} wrapLongLines>\n        {stringified}\n      </SyntaxHighlighter>\n      <SyntaxHighlighter language='html' style={theme === 'dark' ? a11yDark : oneLight} wrapLongLines>\n        {`// HTML \n${innerHtml}`}\n      </SyntaxHighlighter>\n    </CE.Block>\n  );\n};\n","import React from 'react';\nimport { CE } from 'react-content-elements';\nimport { Layout } from '../../layout';\n\nimport { useGetData } from 'src/custom/project-a/data';\nimport { CodeExample } from '../../modules';\nimport { CODE_EXAMPLES } from '../../constants';\n\nconst mainClass = 'home';\n\nconst Index = () => {\n  const pageData = useGetData('IndexPage');\n\n  return (\n    <>\n      {/* @ts-ignore*/}\n      <Layout className={mainClass} title='What?'>\n        <CE.Block modifiers={['section', 'container']}>\n          <CE.Text>React Content Elements is another JavaScript Library.</CE.Text>\n          <CE.Text>\n            It is designed to provide another level of HTML(structure) and CSS(styles) development experience.\n          </CE.Text>\n          <CE.Text>Simple, quick and linear solution for all of your daily base development routine.</CE.Text>\n          <CE.Text>\n            Following webpage is created within the RCE library. The result is available in 'Elements' tab via developer\n            tools.\n          </CE.Text>\n          <CodeExample ex={CODE_EXAMPLES.BASIC_USAGE} />\n        </CE.Block>\n      </Layout>\n    </>\n  );\n};\n\nexport default Index;\n","export const STRING_LITERALS = {\n  space: ' ',\n  srcSetDivider: ', ',\n};\n","import { STRING_LITERALS } from '../models';\n\nexport const SHARED_UTILS = {\n  getClassNames(...classes: any[]) {\n    const classNames = classes.flat(1);\n    return classNames\n      .filter((n) => n && typeof n === 'string')\n      .map((n) => n.trim().toLowerCase())\n      .join(STRING_LITERALS.space);\n  },\n  capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n};\n","import React from 'react';\n\nexport function useValueFromList<ListOfValues extends Array<unknown> | ReadonlyArray<unknown>>(\n  listOfValues: ListOfValues,\n) {\n  const [activeValue, setActiveValue] = React.useState<ListOfValues[number]>(listOfValues[0]);\n\n  return [activeValue, setActiveValue] as const;\n}\n"],"names":["TAG_USAGE","el","CE","stringified","modifiers","tag","config","content","CODE_EXAMPLES","BASIC_USAGE","src","MODIFIERS_USAGE","MODIFIERS_FEATURES_USAGE","aboveAndBeyond","size","CONTENT_USAGE","CONFIG_USAGE","IndexPage","header","rawContent","subHeader","textBlocks","title","text","caption","items","undefined","options","image","srcSet","xs","description","useGetData","pathToData","DATA_BY_PAGE","Layout","children","props","CodeExample","Object","keys","reduce","r","k","toLowerCase","SHARED_UTILS","ex","Array","isArray","map","example","CodeExampleTemplate","toString","testRef","React","innerHtml","setInnerHtml","theme","useContext","ThemeContext","current","innerHTML","ref","style","display","language","a11yDark","oneLight","wrapLongLines","className","STRING_LITERALS","space","srcSetDivider","getClassNames","classes","flat","filter","n","trim","join","capitalize","str","charAt","toUpperCase","slice","useValueFromList","listOfValues"],"sourceRoot":""}