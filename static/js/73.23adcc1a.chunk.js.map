{"version":3,"file":"static/js/73.23adcc1a.chunk.js","mappings":"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","sources":["custom/project-a/data/data-by-page/index-page.ts","custom/project-a/data/data-by-page/index.ts","custom/project-a/data/useGetData.ts","custom/project-a/layout/default/default.tsx","custom/project-a/components/docs-content-header/docs-content-header.tsx","shared/utils/index.ts","shared/hooks/use-value-from-list.ts","custom/project-a/modules/code-example/code-example.tsx","custom/project-a/modules/code-example/code-block.tsx","custom/project-a/constants/code-examples.tsx","custom/project-a/components/code-example-image/code-example-image.tsx","custom/project-a/components/collapsible/collapsible.tsx","custom/project-a/components/docs-html/docs-html.tsx","custom/project-a/components/docs-tag/docs-tag.tsx","custom/project-a/components/docs-modifiers/docs-modifiers.tsx","custom/project-a/components/docs-content/docs-content.tsx","custom/project-a/components/docs-config/docs-config.tsx","custom/project-a/pages/docs/template.tsx","custom/project-a/components/docs-css/docs-css.tsx","custom/project-a/pages/docs/index.tsx"],"sourcesContent":["export default {\n  header: {\n    rawContent: 'React Content Elements',\n    modifiers: ['main-header'],\n  },\n  subHeader: 'Your first Web Content Factory',\n  textBlocks: [\n    {\n      title: 'Web Content Development(WCD)',\n      text: {\n        rawContent:\n          '<b>Web Content Development</b> is appliance of your  <i>content data</i> to the digital page' +\n          '</br>It stands for CRUD operations with the <i>content data</i> of the page',\n      },\n      caption: '',\n    },\n    {\n      title: 'How did you solve it before?',\n      items: [\n        'Use UX lib or develop basic structures internally to get basic reusable structures',\n        'Apply UI lib or develop style system internally to describe the outlook of the code structures',\n        'Maintain the code structures and style system on a daily base',\n        'Refactor it due to changed requirements',\n      ],\n      caption: undefined,\n    },\n    {\n      title: 'Why bother?',\n      items: [\n        'Custom approach for basic structures architecture by company/team/developer',\n        'Custom approach for style system by company/team/developer',\n        'Duplicating same patterns by project',\n        'Endless refactoring to meet new requirements',\n      ],\n      caption: undefined,\n    },\n    {\n      title: 'Why React Content Elements?',\n      items: [\n        'Formalized HTML and CSS development pattern',\n        // 'Predefined and reusable basic HTML structures for content elements',\n        // 'Single and simple CSS styles structure',\n        // 'Scalable with custom solutions both in HTML and CSS structures',\n      ],\n      caption: undefined,\n    },\n  ],\n  options: [\n    {\n      image: {\n        src: 'https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea057.jpg',\n        srcSet: {\n          xs: 'https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea058.jpg',\n        },\n      },\n      // title: \"Option #1\",\n      // TODO FAQ: How to make it work?\n      title: {\n        rawContent: 'Option #1',\n      },\n      description: 'Description of option',\n    },\n    {\n      image:\n        'https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea057.jpg',\n      title: 'Option #2',\n      description: 'Description of option',\n    },\n    {\n      image:\n        'https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea057.jpg',\n      title: 'Option #3',\n      description: 'Description of option',\n    },\n  ],\n} as const;\n","import IndexPageData from './index-page';\n\nconst DATA_BY_PAGE = {\n  IndexPage: IndexPageData,\n};\n\nexport default DATA_BY_PAGE;\n","import DATA_BY_PAGE from './data-by-page';\nimport { PathToData, DataByPath } from './types';\n\nexport function useGetData<Path extends PathToData>(pathToData: Path): DataByPath<Path> {\n  // TODO: FIX TS\n  // @ts-ignore\n  return DATA_BY_PAGE[pathToData];\n}\n","import React from 'react';\nimport Test, { CE } from 'react-content-elements';\nimport { ContentElementConfig, ContentElementProps } from 'react-content-elements';\nimport { Header } from '../../components';\n\ninterface LayoutProps extends React.PropsWithChildren<Pick<ContentElementProps<'text'>, 'modifiers'>> {\n  className?: string;\n  title?: ContentElementConfig<'text'>;\n}\n\nexport const Layout = ({ modifiers = [], children, title, ...props }: LayoutProps) => {\n  return (\n    <CE.Block {...props} modifiers={['page', ...modifiers]}>\n      <CE.Block modifiers={['container']}>\n        <Header />\n        <CE.Text modifiers={['page-title']} config={title} />\n      </CE.Block>\n      <CE.Block tag='main' modifiers={['main']}>\n        {children}\n      </CE.Block>\n    </CE.Block>\n  );\n};\n","import React from 'react';\nimport { CE } from 'react-content-elements';\nimport type { ContentElementConfigProps } from 'react-content-elements';\n\nexport interface DailyCardProps extends React.PropsWithChildren {\n  itemIndex?: number;\n  image?: ContentElementConfigProps<'image'>;\n  title?: ContentElementConfigProps<'text'>;\n}\n\nexport const DocsContentHeader = ({ image, title }: DailyCardProps) => {\n  return (\n    <CE.Block className='docs-content-header'>\n      <CE.Text>\n        <mark>Content Elements</mark> represent basic HTML structures.\n        <br />\n        Development process with <mark>Content Elements</mark> is formalized in terms of generating basic\n        structures(HTML) and styles(CSS).\n        <br />\n        Basic structure is any piece of HTML or/and CSS that is generated via <mark>Content Elements</mark>.\n      </CE.Text>\n      <CE.Text\n        modifiers={['list-title']}\n        content='Let’s clarify a set of dependencies for the web content development flow:'\n      />\n      <CE.List\n        modifiers={['disc']}\n        content={[\n          'HTML (set of basic structures instead of manual code duplications)',\n          'CSS (simple and scalable style system, less dependent on HTML structure)',\n          'SEO (tag name, aria-attributes, e.t.c. - simple adjustment in one click)',\n        ]}\n      ></CE.List>\n    </CE.Block>\n  );\n};\n","import { STRING_LITERALS } from '../models';\n\nexport const SHARED_UTILS = {\n  getClassNames(...classes: any[]) {\n    const classNames = classes.flat(1);\n    return classNames\n      .filter((n) => n && typeof n === 'string')\n      .map((n) => n.trim().toLowerCase())\n      .join(STRING_LITERALS.space);\n  },\n  capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n};\n","import React from 'react';\n\nexport function useValueFromList<ListOfValues extends Array<unknown> | ReadonlyArray<unknown>>(\n  listOfValues: ListOfValues,\n) {\n  const [activeValue, setActiveValue] = React.useState<ListOfValues[number]>(listOfValues[0]);\n\n  return [activeValue, setActiveValue] as const;\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { CE } from 'react-content-elements';\nimport { SHARED_UTILS } from 'src/shared';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { a11yDark, oneLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { ThemeContext } from \"src/custom/providers/theme\";\n\ntype DisplayNameByIdMap = {\n    [CEKey in Lowercase<keyof typeof CE>]: `CE.${Capitalize<CEKey>}`;\n};\n\nconst DISPLAY_NAME_BY_ID = Object.keys(CE).reduce(\n    (r,\n        k) => ({\n        ...r,\n        [k.toLowerCase()]: `CE.${SHARED_UTILS.capitalize(k)}`,\n    }),\n    {},\n) as DisplayNameByIdMap;\n\ntype DisplayNameById = typeof DISPLAY_NAME_BY_ID;\ntype DisplayNameIds = Array<keyof DisplayNameById>;\n\ntype CodeExampleProps = { ex: CodeExampleTemplateProps | Array<CodeExampleTemplateProps> };\n\nexport const CodeExample = ({ex}: CodeExampleProps) => {\n    if (Array.isArray(ex)) {\n        return (\n            <CE.List modifiers={['code-examples']}>\n                {ex.map((example) => (\n                    <CodeExampleTemplate key={example.el.toString()} {...example} />\n                ))}\n            </CE.List>\n        );\n    }\n\n    return <CodeExampleTemplate key={ex.el.toString()} {...ex} />;\n};\n\ntype CodeExampleTemplateProps = {\n    el: ReactElement;\n    stringified: string;\n    id?: number | string;\n    noResult?: boolean;\n};\n\nexport type CodeExampleTemplate = CodeExampleTemplateProps;\n\nconst CodeExampleTemplate = ({el, stringified, noResult}: CodeExampleTemplateProps) => {\n    const testRef = React.useRef<HTMLDivElement>(null);\n    const [innerHtml, setInnerHtml] = React.useState('');\n    const { theme } = useContext(ThemeContext);\n\n    React.useEffect(() => {\n        if (innerHtml === '') {\n            setInnerHtml(testRef.current.innerHTML);\n        }\n    }, [innerHtml]);\n\n    return (\n        <CE.Block modifiers={['code-example']}>\n            <div ref={testRef} style={{display: 'none'}}>{el}</div>\n            <SyntaxHighlighter language='javascript' style={theme === 'dark' ? a11yDark : oneLight} wrapLongLines>\n                {stringified}\n            </SyntaxHighlighter>\n            <SyntaxHighlighter language='html' style={theme === 'dark' ? a11yDark : oneLight} wrapLongLines>\n                {`// HTML \n${innerHtml}`}\n            </SyntaxHighlighter>\n        </CE.Block>\n    );\n};\n","import React, { useContext } from 'react';\nimport { CE } from 'react-content-elements';\nimport { Prism as SyntaxHighlighter, SyntaxHighlighterProps } from 'react-syntax-highlighter';\nimport { a11yDark, oneLight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { ThemeContext } from \"src/custom/providers/theme\";\n\nexport const CodeBlock = ({children}: SyntaxHighlighterProps) => {\n    const { theme } = useContext(ThemeContext);\n\n    return (\n            <SyntaxHighlighter language='javascript' style={theme === 'dark' ? a11yDark : oneLight} wrapLongLines>\n                {children}\n            </SyntaxHighlighter>\n    );\n};\n\n\n","import { CE } from 'react-content-elements';\nimport React from 'react';\nimport { CodeExampleTemplate } from '../modules';\n\nconst BASIC_USAGE: Array<CodeExampleTemplate> = [\n  {\n    el: <CE.Text modifiers={['accent']}>Hello world!</CE.Text>,\n    stringified: `<CE.Text modifiers={[\"accent\"]}>Hello world!</CE.Text>`,\n  },\n  {\n    el: <CE.Text config={{ content: 'Hello world!', modifiers: ['title'] }} />,\n    stringified: `<CE.Text config={{ content: \"Hello world!\", modifiers: ['title'] }} />`,\n  },\n  {\n    el: <CE.Image src='path/to/image.jpg' />,\n    stringified: `<CE.Image src=\"path/to/image.jpg\" />`,\n  },\n];\n\nconst TAG_USAGE: Array<CodeExampleTemplate> = [\n  {\n    el: <CE.Text>Text Content Element</CE.Text>,\n    stringified: `<CE.Text>Text Content Element</CE.Text>`,\n  },\n  {\n    el: <CE.Text modifiers={['title']}>Example with modifier</CE.Text>,\n    stringified: `<CE.Text modifiers={['title']}>Example with modifier</CE.Text>`,\n  },\n  {\n    el: (\n      <CE.Text modifiers={['title']} tag='h1'>\n        Example with \"h1\" tag\n      </CE.Text>\n    ),\n    stringified: `<CE.Text modifiers={['title']} tag=\"h1\">Example with \"h1\" tag</CE.Text>`,\n  },\n  {\n    el: <CE.Text config={{ content: 'Hello world!', tag: 'h3' }}>Example with config</CE.Text>,\n    stringified: `<CE.Text config={{ content: \"Hello world!\", tag: 'h3' }}>Example with config</CE.Text>`,\n  },\n  {\n    el: <CE.Block>Block Content Element</CE.Block>,\n    stringified: `<CE.Block>Block Content Element</CE.Block>`,\n  },\n  {\n    el: <CE.Block tag='section'>Example with section tag</CE.Block>,\n    stringified: `<CE.Block tag=\"section\">Example with section tag</CE.Block>`,\n  },\n];\n\nexport const CODE_EXAMPLES = {\n  BASIC_USAGE,\n  TAG_USAGE,\n};\n","import React from 'react';\nimport { CE } from 'react-content-elements';\n\nexport type CodeExampleProps = Pick<HTMLImageElement, 'src'>;\n\nexport const CodeExampleImage = ({ src }: CodeExampleProps) => {\n  return <CE.Image src={src} className='code-example' />;\n};\n","import React from 'react';\nimport { CE } from 'react-content-elements';\n\ntype CollapsibleProps = { btnText: string; btnTextCollapsed?: string; isCollapsedByDefault?: boolean };\n\nexport const Collapsible = ({\n  btnText,\n  btnTextCollapsed,\n  children,\n  isCollapsedByDefault = false,\n}: React.PropsWithChildren<CollapsibleProps>) => {\n  const [isCollapsed, setIsCollapsed] = React.useState(() => isCollapsedByDefault);\n\n  const triggerText = btnTextCollapsed && !isCollapsed ? btnTextCollapsed : btnText;\n\n  return (\n    <CE.Block className='collapsible'>\n      <CE.Button\n        content={triggerText}\n        onClick={() => setIsCollapsed((prevState) => !prevState)}\n        modifiers={['collapsible-trigger', 'b']}\n      />\n      <CE.Block modifiers={['collapsible-content', isCollapsed && 'collapsed']}>{children}</CE.Block>\n    </CE.Block>\n  );\n};\n","import React from 'react';\nimport { CE } from 'react-content-elements';\nimport { CodeExample } from '../../modules';\nimport { CODE_EXAMPLES } from '../../constants';\nimport { useValueFromList } from 'src/shared';\nimport { DocsTag } from '../docs-tag';\nimport { DocsModifiers } from '../docs-modifiers';\nimport { DocsContent } from '../docs-content';\nimport { DocsConfig } from '../docs-config';\nimport { Collapsible } from '../collapsible';\n\nconst CE_PROPERTIES = ['Tag', 'Modifiers', 'Content', 'Config'] as const;\n\nconst TemplateByTab: Record<(typeof CE_PROPERTIES)[number], React.ElementType> = {\n  Tag: DocsTag,\n  Modifiers: DocsModifiers,\n  Content: DocsContent,\n  Config: DocsConfig,\n};\n\nexport const DocsHtml = () => {\n  const [activeTabId, setActiveTabId] = useValueFromList(CE_PROPERTIES);\n\n  const ActiveTabTemplate = React.useMemo(() => TemplateByTab[activeTabId], [activeTabId]);\n\n  return (\n    <CE.Block className='docs-html'>\n      <CE.Text modifiers={['list-title']}>\n        All <mark>Content Elements</mark> are grouped by its role in the page:\n      </CE.Text>\n      <CE.List modifiers={['disc', 'i']} content={Object.keys(CE)} />\n      <CE.Text modifiers={['list-title']}>\n        All <mark>Content Elements</mark> have 4 special properties:\n      </CE.Text>\n      <CE.List modifiers={['disc', 'i']} content={CE_PROPERTIES} />\n      <CE.Text modifiers={['list-title']}>\n        All <mark>Content Elements</mark> have a base classname:\n      </CE.Text>\n      <CE.List\n        modifiers={['disc']}\n        content={['<i>ce ce-[name]</i><br />f.e. ‘ce ce-text’ for <mark>Text Content Element</mark>']}\n      />\n      {/*<CE.Text modifiers={['list-title']}>Basic usage:</CE.Text>*/}\n      <Collapsible btnText='Show basic usage examples' btnTextCollapsed='Hide basic usage examples'>\n        <CodeExample ex={CODE_EXAMPLES.BASIC_USAGE} />\n      </Collapsible>\n      <CE.Text modifiers={['title']}>\n        <mark>Content Elements</mark> properties\n      </CE.Text>\n      <CE.List\n        modifiers={['row', 'docs-tabs']}\n        listItemTemplate={({ tab }: { tab: (typeof TABS)[number] }) => {\n          return (\n            <CE.Button\n              type='button'\n              modifiers={['docs-tab', activeTabId === tab && 'active', 'docs-tab-properties']}\n              onClick={() => setActiveTabId(tab)}\n            >\n              {tab}\n            </CE.Button>\n          );\n        }}\n        content={CE_PROPERTIES.map((tab) => ({ tab }))}\n      />\n      <CE.Divider />\n      <ActiveTabTemplate />\n    </CE.Block>\n  );\n};\n","import React from 'react';\nimport { CE } from 'react-content-elements';\nimport { CodeExample, CodeBlock } from '../../modules';\nimport { CODE_EXAMPLES } from '../../constants';\n\nexport const DocsTag = () => {\n  return (\n    <>\n      <CE.Text modifiers={['title']}>Tag</CE.Text>\n      <CE.Text\n        content={[\n          'Each <mark>Content Element</mark> has a default tag applied by name of the element.',\n          'If the tag is provided explicitely it will be used at first priority.',\n          `The deafult value can be overriden by special modifers as well, f.e. 'title' modifier will change the default 'p' tag to 'h3'`,\n        ]}\n      />\n      <CodeBlock>{`const DEFAULT_TAGS_BY_NAME = {\n    text: 'p',\n    block: 'div',\n    image: 'img',\n    list: 'ul',\n    link: 'a',\n    divider: 'hr',\n    button: 'button',\n}\n`}\n      </CodeBlock>\n      <CodeExample ex={CODE_EXAMPLES.TAG_USAGE} />\n    </>\n  );\n};\n","import React from 'react';\nimport { CE } from 'react-content-elements';\nimport { CodeExampleImage } from '../code-example-image';\nimport ImageModifier from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.22.45.png';\nimport ImageModifier1 from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.23.04.png';\nimport ImageModifier2 from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.23.16.png';\nimport ImageModifier3 from '../../assets/images/code-examples/Screenshot 2023-04-04 at 22.24.54.png';\n\nexport const DocsModifiers = () => {\n  return (\n    <>\n      <CE.Text modifiers={['title']}>Modifiers</CE.Text>\n      <CE.Text\n        content={[\n          'By modifiers you adjust styles or behavoiur of the generated HTML structure.',\n          'Each modifier is a string that represents a meaningful label for the particular element in HTML structure.',\n          'Modifiers extend base <mark>Content Element</mark> class name and might change bahaviour, f.e. override a default tag in case tag was not provided explicitely via ‘tag’ property.',\n        ]}\n      />\n      <CodeExampleImage src={ImageModifier} />\n      <CE.Text modifiers={['list-title']}>Modifiers have following features:</CE.Text>\n      <CE.List modifiers={['disc']}>\n        <>\n          <CE.Text>Above and Beyond</CE.Text>\n          <CodeExampleImage src={ImageModifier1} />\n          <CE.Text\n            content={[\n              '<code>above-[$ce-breakpoint]</code> - styles are applied for screen size ≥ <code>$ce-breakpoint-value</code>',\n              '<code>beyond-[$ce-breakpoint]</code> - styles are applied for screen size < <code>$ce-breakpoint-value</code>',\n            ]}\n          />\n          <CodeExampleImage src={ImageModifier2} />\n        </>\n        <>\n          <CE.Text>Size</CE.Text>\n          <CE.Text>To define Content Element size use breakpoint key as a modifier:</CE.Text>\n          <CodeExampleImage src={ImageModifier3} />\n        </>\n      </CE.List>\n    </>\n  );\n};\n","import React from 'react';\nimport { CE } from 'react-content-elements';\nimport ImageTag from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.22.35.png';\nimport { CodeExampleImage } from '../code-example-image';\n\nexport const DocsContent = () => {\n  return (\n    <>\n      <CE.Text modifiers={['title']}>Tag</CE.Text>\n      <CE.Text\n        content={[\n          'Each <mark>Content Element</mark> has a default tag applied by name of the element.',\n          'If the tag is provided explicitely it will override a default value.',\n          'It also depends on a template’s implementation.',\n        ]}\n      />\n      <CodeExampleImage src={ImageTag} />\n    </>\n  );\n};\n","import React from 'react';\nimport { CE } from 'react-content-elements';\nimport { CodeExampleImage } from '../code-example-image';\nimport ImageConfig from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.23.38.png';\n\nexport const DocsConfig = () => {\n  return (\n    <>\n      <CE.Text modifiers={['title']}>Config</CE.Text>\n      <CE.Text\n        content={[\n          'By config you can adjust all element properties.',\n          'Properties provided via config will be applied at main priority.',\n        ]}\n      />\n      <CodeExampleImage src={ImageConfig} />\n    </>\n  );\n};\n","import React from 'react';\nimport { CE } from 'react-content-elements';\n\nimport { Layout } from '../../layout';\n\nimport { useGetData } from 'src/custom/project-a/data';\nimport { DocsContentHeader } from 'src/custom/project-a/components/docs-content-header';\nimport { DocsHtml } from 'src/custom/project-a/components/docs-html';\nimport { DocsCss } from 'src/custom/project-a/components/docs-css';\nimport { useValueFromList } from 'src/shared';\n\nconst mainClass = 'docs';\n\nconst TABS = ['HTML', 'CSS'] as const;\n\nconst TemplateByTab = {\n  HTML: DocsHtml,\n  CSS: DocsCss,\n} as const;\n\nconst Template = () => {\n  const pageData = useGetData('IndexPage');\n\n  const [activeTabId, setActiveTabId] = useValueFromList(TABS);\n\n  const ActiveTabTemplate = React.useMemo(() => TemplateByTab[activeTabId], [activeTabId]);\n\n  return (\n    <>\n      <Layout className={mainClass} title='Docs'>\n        <CE.Block modifiers={['container', 'docs-content']}>\n          <DocsContentHeader />\n          <CE.List\n            modifiers={['row', 'docs-tabs']}\n            listItemTemplate={({ tab }: { tab: (typeof TABS)[number] }) => {\n              return (\n                <CE.Button\n                  modifiers={['docs-tab', activeTabId === tab && 'active']}\n                  onClick={() => setActiveTabId(tab)}\n                >\n                  {tab}\n                </CE.Button>\n              );\n            }}\n            content={TABS.map((tab) => ({ tab }))}\n          />\n          <CE.Divider />\n          <ActiveTabTemplate />\n        </CE.Block>\n      </Layout>\n    </>\n  );\n};\n\nexport default Template;\n","import React from 'react';\nimport { CE } from 'react-content-elements';\nimport { ContentElementConfigProps } from 'react-content-elements';\nimport { CodeExampleImage } from '../code-example-image';\nimport ImageByName from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.23.46.png';\nimport ImageByModifier from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.23.55.png';\nimport ImageWithModifier from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.24.06.png';\nimport ImageOtherModifiers from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.24.12.png';\n\nexport interface DailyCardProps extends React.PropsWithChildren {\n  itemIndex?: number;\n  image?: ContentElementConfigProps<'image'>;\n  title?: ContentElementConfigProps<'text'>;\n}\n\nexport const DocsCss = ({ image, title }: DailyCardProps) => {\n  return (\n    <CE.Block className='docs-html'>\n      <CE.Text>Base Content Element class name is:</CE.Text>\n      <CE.Text modifiers={['with-disc']} content={['<code>ce ce-[name]</code>']} />\n      <CE.Text>Modifiers extend the base Content Element class name with following pattern: </CE.Text>\n      <CE.Text\n        modifiers={['with-disc']}\n        content={['<code>ce ce-[name] ce--[modifier] ce--[another-modifier]</code>']}\n      />\n\n      <CE.Text>\n        Styles are applied to the <mark>Content Elements</mark> via mixins.\n      </CE.Text>\n      <CE.Text modifiers={['title']}>@byName</CE.Text>\n      <CodeExampleImage src={ImageByName} />\n\n      <CE.Text modifiers={['title']}>@byModifier</CE.Text>\n      <CodeExampleImage src={ImageByModifier} />\n\n      <CE.Text modifiers={['title']}>@withModifier</CE.Text>\n      <CodeExampleImage src={ImageWithModifier} />\n\n      <CE.Text modifiers={['list-title']}>\n        <mark>Additional mixins:</mark>\n      </CE.Text>\n      <CE.List modifiers={['disc']} content={['<code>@nextByName</code>', '<code>@nextByModifier</code>']} />\n      <CodeExampleImage src={ImageOtherModifiers} />\n    </CE.Block>\n  );\n};\n","import './styles.scss';\nimport { default as Index } from './template';\n\nexport default Index;\n"],"names":["IndexPage","header","rawContent","modifiers","subHeader","textBlocks","title","text","caption","items","undefined","options","image","src","srcSet","xs","description","useGetData","pathToData","DATA_BY_PAGE","Layout","children","props","CE","config","tag","DocsContentHeader","className","content","SHARED_UTILS","str","charAt","toUpperCase","slice","useValueFromList","listOfValues","React","CodeExample","Object","keys","reduce","r","k","toLowerCase","ex","Array","isArray","map","example","CodeExampleTemplate","el","toString","stringified","testRef","noResult","innerHtml","setInnerHtml","theme","useContext","ThemeContext","current","innerHTML","ref","style","display","language","a11yDark","oneLight","wrapLongLines","CodeBlock","CODE_EXAMPLES","BASIC_USAGE","TAG_USAGE","CodeExampleImage","Collapsible","btnText","btnTextCollapsed","isCollapsedByDefault","isCollapsed","setIsCollapsed","triggerText","onClick","prevState","CE_PROPERTIES","TemplateByTab","Tag","Modifiers","ImageModifier","ImageModifier1","ImageModifier2","ImageModifier3","Content","ImageTag","Config","ImageConfig","TABS","HTML","activeTabId","setActiveTabId","ActiveTabTemplate","listItemTemplate","tab","type","CSS","ImageByName","ImageByModifier","ImageWithModifier","ImageOtherModifiers"],"sourceRoot":""}