{"version":3,"file":"static/js/74.4b03372b.chunk.js","mappings":"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","sources":["custom/project-a/data/data-by-page/index-page.ts","custom/project-a/data/data-by-page/index.ts","custom/project-a/data/useGetData.ts","custom/project-a/layout/default/default.tsx","custom/project-a/components/docs-content-header/docs-content-header.tsx","shared/utils/index.ts","custom/project-a/modules/code-example/code-example.tsx","custom/project-a/constants/code-examples.tsx","custom/project-a/components/code-example-image/code-example-image.tsx","custom/project-a/pages/docs/template.tsx","custom/project-a/components/docs-html/docs-html.tsx","custom/project-a/components/docs-css/docs-css.tsx","custom/project-a/pages/docs/index.tsx","../../src/index.ts","../node_modules/is-plain-object/dist/is-plain-object.js","../node_modules/react-element-to-jsx-string/src/formatter/spacer.js","../node_modules/react-element-to-jsx-string/src/formatter/sortObject.js","../node_modules/react-element-to-jsx-string/src/tree.js","../node_modules/react-element-to-jsx-string/src/parser/parseReactElement.js","../node_modules/react-element-to-jsx-string/src/formatter/formatFunction.js","../node_modules/react-element-to-jsx-string/src/formatter/formatPropValue.js","../node_modules/react-element-to-jsx-string/src/formatter/formatComplexDataStructure.js","../node_modules/react-element-to-jsx-string/src/formatter/mergeSiblingPlainStringChildrenReducer.js","../node_modules/react-element-to-jsx-string/src/formatter/formatReactElementNode.js","../node_modules/react-element-to-jsx-string/src/formatter/createPropFilter.js","../node_modules/react-element-to-jsx-string/src/formatter/sortPropsByNames.js","../node_modules/react-element-to-jsx-string/src/formatter/formatProp.js","../node_modules/react-element-to-jsx-string/src/formatter/formatReactFragmentNode.js","../node_modules/react-element-to-jsx-string/src/formatter/formatTreeNode.js","../node_modules/react-element-to-jsx-string/src/formatter/formatTree.js","../node_modules/react-element-to-jsx-string/src/index.js","../node_modules/react-element-to-jsx-string/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-element-to-jsx-string/node_modules/react-is/index.js"],"sourcesContent":["export default {\n  header: {\n    rawContent: 'React Content Elements',\n    modifiers: ['main-header'],\n  },\n  subHeader: 'Your first Web Content Factory',\n  textBlocks: [\n    {\n      title: 'Web Content Development(WCD)',\n      text: {\n        rawContent:\n          '<b>Web Content Development</b> is appliance of your  <i>content data</i> to the digital page' +\n          '</br>It stands for CRUD operations with the <i>content data</i> of the page',\n      },\n      caption: '',\n    },\n    {\n      title: 'How did you solve it before?',\n      items: [\n        'Use UX lib or develop basic structures internally to get basic reusable structures',\n        'Apply UI lib or develop style system internally to describe the outlook of the code structures',\n        'Maintain the code structures and style system on a daily base',\n        'Refactor it due to changed requirements',\n      ],\n      caption: undefined,\n    },\n    {\n      title: 'Why bother?',\n      items: [\n        'Custom approach for basic structures architecture by company/team/developer',\n        'Custom approach for style system by company/team/developer',\n        'Duplicating same patterns by project',\n        'Endless refactoring to meet new requirements',\n      ],\n      caption: undefined,\n    },\n    {\n      title: 'Why React Content Elements?',\n      items: [\n        'Formalized HTML and CSS development pattern',\n        // 'Predefined and reusable basic HTML structures for content elements',\n        // 'Single and simple CSS styles structure',\n        // 'Scalable with custom solutions both in HTML and CSS structures',\n      ],\n      caption: undefined,\n    },\n  ],\n  options: [\n    {\n      image: {\n        src: 'https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea057.jpg',\n        srcSet: {\n          xs: 'https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea058.jpg',\n        },\n      },\n      // title: \"Option #1\",\n      // TODO FAQ: How to make it work?\n      title: {\n        rawContent: 'Option #1',\n      },\n      description: 'Description of option',\n    },\n    {\n      image:\n        'https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea057.jpg',\n      title: 'Option #2',\n      description: 'Description of option',\n    },\n    {\n      image:\n        'https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea057.jpg',\n      title: 'Option #3',\n      description: 'Description of option',\n    },\n  ],\n} as const;\n","import IndexPageData from './index-page';\n\nconst DATA_BY_PAGE = {\n  IndexPage: IndexPageData,\n};\n\nexport default DATA_BY_PAGE;\n","import DATA_BY_PAGE from './data-by-page';\nimport { PathToData, DataByPath } from './types';\n\nexport function useGetData<Path extends PathToData>(pathToData: Path): DataByPath<Path> {\n  // TODO: FIX TS\n  // @ts-ignore\n  return DATA_BY_PAGE[pathToData];\n}\n","import React from 'react';\nimport Test, { CE } from 'react-content-elements';\nimport { ContentElementConfig, ContentElementProps } from 'react-content-elements';\nimport { Header } from '../../components';\n\ninterface LayoutProps extends React.PropsWithChildren<Pick<ContentElementProps<'text'>, 'modifiers'>> {\n  className?: string;\n  title?: ContentElementConfig<'text'>;\n}\n\nexport const Layout = ({ modifiers = [], children, title, ...props }: LayoutProps) => {\n  return (\n    <CE.Block {...props} modifiers={['page', ...modifiers]}>\n      <CE.Block modifiers={['container']}>\n        <Header />\n        <CE.Text modifiers={['page-title']} config={title} />\n      </CE.Block>\n      <CE.Block tag='main' modifiers={['main']}>\n        {children}\n      </CE.Block>\n    </CE.Block>\n  );\n};\n","import React from 'react';\nimport { CE } from 'react-content-elements';\nimport type { ContentElementConfigProps } from 'react-content-elements';\n\nexport interface DailyCardProps extends React.PropsWithChildren {\n  itemIndex?: number;\n  image?: ContentElementConfigProps<'image'>;\n  title?: ContentElementConfigProps<'text'>;\n}\n\nexport const DocsContentHeader = ({ image, title }: DailyCardProps) => {\n  return (\n    <CE.Block className='docs-content-header'>\n      <CE.Text>\n        <mark>Content Elements</mark> represent basic HTML structures.\n        <br />\n        Development process with <mark>Content Elements</mark> is formalized in terms of generating basic\n        structures(HTML) and styles(CSS).\n        <br />\n        Basic structure is any piece of HTML or/and CSS that is generated via <mark>Content Elements</mark>.\n      </CE.Text>\n      <CE.Text\n        modifiers={['list-title']}\n        content='Let’s clarify a set of dependencies for the web content development flow:'\n      />\n      <CE.List\n        modifiers={['disc']}\n        content={[\n          'HTML (set of basic structures instead of manual code duplications)',\n          'CSS (simple and scalable style system, less dependent on HTML structure)',\n          'SEO (tag name, aria-attributes, e.t.c. - simple adjustment in one click)',\n        ]}\n      ></CE.List>\n    </CE.Block>\n  );\n};\n","import { STRING_LITERALS } from '../models';\n\nexport const SHARED_UTILS = {\n  getClassNames(...classes: any[]) {\n    const classNames = classes.flat(1);\n    return classNames\n      .filter((n) => n && typeof n === 'string')\n      .map((n) => n.trim().toLowerCase())\n      .join(STRING_LITERALS.space);\n  },\n  capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  },\n};\n","import React, { ReactElement } from 'react';\nimport { CE } from 'react-content-elements';\nimport reactElementToJSXString from 'react-element-to-jsx-string';\nimport { SHARED_UTILS } from 'src/shared';\n\ntype DisplayNameByIdMap = {\n  [CEKey in Lowercase<keyof typeof CE>]: `CE.${Capitalize<CEKey>}`;\n};\n\nconst DISPLAY_NAME_BY_ID = Object.keys(CE).reduce(\n  (r, k) => ({\n    ...r,\n    [k.toLowerCase()]: `CE.${SHARED_UTILS.capitalize(k)}`,\n  }),\n  {},\n) as DisplayNameByIdMap;\n\ntype DisplayNameById = typeof DISPLAY_NAME_BY_ID;\ntype DisplayNameIds = Array<keyof DisplayNameById>;\n\ntype CodeExampleProps = { ex: CodeExampleTemplateProps | Array<CodeExampleTemplateProps> };\n\nexport const CodeExample = ({ ex }: CodeExampleProps) => {\n  if (Array.isArray(ex)) {\n    return (\n      <CE.List modifiers={['code-examples']}>\n        {ex.map((example) => (\n          <CodeExampleTemplate key={example.el.toString()} {...example} />\n        ))}\n      </CE.List>\n    );\n  }\n\n  return <CodeExampleTemplate key={ex.el.toString()} {...ex} />;\n};\n\ntype CodeExampleTemplateProps = { el: ReactElement; id?: number | string; displayNameId: DisplayNameIds[number] };\n\nexport type CodeExampleTemplate = CodeExampleTemplateProps;\n\nconst CodeExampleTemplate = ({ el, id, displayNameId }: CodeExampleTemplateProps) => {\n  console.log('displayNameId: ', displayNameId);\n  return (\n    <CE.Block modifiers={['code-example']}>\n      <CE.Text>\n        <code>{reactElementToJSXString(el, { displayName: () => DISPLAY_NAME_BY_ID[displayNameId] })}</code>\n      </CE.Text>\n      <CE.Text modifiers={['i', 'sm']}>Result:</CE.Text>\n      {el}\n    </CE.Block>\n  );\n};\n","import { CE } from 'react-content-elements';\nimport React from 'react';\nimport { CodeExampleTemplate } from '../modules';\n\nconst BASIC_USAGE: Array<CodeExampleTemplate> = [\n  {\n    el: <CE.Text>Hello world!</CE.Text>,\n    displayNameId: 'text',\n  },\n  {\n    el: <CE.Text config='Hello world!' />,\n    displayNameId: 'text',\n  },\n  {\n    el: <CE.Text config={{ content: 'Hello world!' }} />,\n    displayNameId: 'text',\n  },\n  {\n    el: <CE.Text content='Hello world!' />,\n    displayNameId: 'text',\n  },\n  {\n    el: <CE.Image src='path/to/image.jpg' />,\n    displayNameId: 'image',\n  },\n  {\n    el: <CE.Block modifiers={['container']}>Hello world!</CE.Block>,\n    displayNameId: 'block',\n  },\n];\n\nexport const CODE_EXAMPLES = {\n  BASIC_USAGE,\n};\n","import React from 'react';\nimport { CE } from 'react-content-elements';\n\nexport type CodeExampleProps = Pick<HTMLImageElement, 'src'>;\n\nexport const CodeExampleImage = ({ src }: CodeExampleProps) => {\n  return <CE.Image src={src} className='code-example' />;\n};\n","import React from 'react';\nimport { CE } from 'react-content-elements';\n\nimport { Layout } from '../../layout';\n\nimport { useGetData } from 'src/custom/project-a/data';\nimport { DocsContentHeader } from 'src/custom/project-a/components/docs-content-header';\nimport { DocsHtml } from 'src/custom/project-a/components/docs-html';\nimport { DocsCss } from 'src/custom/project-a/components/docs-css';\nimport { DailyCard } from '../../components';\n\nconst mainClass = 'docs';\n\nconst TABS = ['HTML', 'CSS'] as const;\n\nconst TemplateByTab = {\n  HTML: DocsHtml,\n  CSS: DocsCss,\n} as const;\n\nconst Template = () => {\n  const pageData = useGetData('IndexPage');\n\n  const [activeTabId, setActiveTabId] = React.useState<(typeof TABS)[number]>(() => TABS[0]);\n\n  const ActiveTabTemplate = TemplateByTab[activeTabId];\n\n  return (\n    <>\n      <Layout className={mainClass} title='Docs'>\n        <CE.Block modifiers={['container', 'docs-content']}>\n          <DocsContentHeader />\n          <CE.List\n            modifiers={['row', 'docs-tabs']}\n            listItemTemplate={({ tab }) => {\n              return (\n                <CE.Button\n                  modifiers={['docs-tab', activeTabId === tab && 'active']}\n                  onClick={() => setActiveTabId(tab)}\n                >\n                  {tab}\n                </CE.Button>\n              );\n            }}\n            content={TABS.map((tab) => ({ tab }))}\n          />\n          <CE.Divider />\n          <ActiveTabTemplate />\n        </CE.Block>\n      </Layout>\n    </>\n  );\n};\n\nexport default Template;\n","import React from 'react';\nimport { CE, ContentElementConfigProps } from 'react-content-elements';\nimport { CodeExample } from '../../modules';\nimport ImageTag from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.22.35.png';\nimport ImageModifier from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.22.45.png';\nimport ImageModifier1 from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.23.04.png';\nimport ImageModifier2 from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.23.16.png';\nimport ImageModifier3 from '../../assets/images/code-examples/Screenshot 2023-04-04 at 22.24.54.png';\nimport ImageConfig from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.23.38.png';\nimport { CODE_EXAMPLES } from '../../constants';\nimport { CodeExampleImage } from '../code-example-image';\n\nexport interface DailyCardProps extends React.PropsWithChildren {\n  itemIndex?: number;\n  image?: ContentElementConfigProps<'image'>;\n  title?: ContentElementConfigProps<'text'>;\n}\n\nexport const DocsHtml = ({ image, title }: DailyCardProps) => {\n  return (\n    <CE.Block className='docs-html'>\n      <CE.Text modifiers={['list-title']}>\n        <mark>Content Elements</mark> are grouped by its role in the page:\n      </CE.Text>\n      <CE.List modifiers={['disc']} content={Object.keys(CE)} />\n      <CE.Text modifiers={['list-title']}>\n        All <mark>Content Elements</mark> have 3 main properties:\n      </CE.Text>\n      <CE.List modifiers={['disc']} content={['tag', 'modifiers', 'config']} />\n      <CE.Text modifiers={['list-title']}>\n        All <mark>Content Elements</mark> have base class name:\n      </CE.Text>\n      <CE.List\n        modifiers={['disc']}\n        content={['<code>ce ce-[name]</code><br />f.e. ‘ce ce-text’ for <mark>Text Content Element</mark>']}\n      />\n      <CE.Text modifiers={['list-title']}>Basic usage:</CE.Text>\n      <CodeExample ex={CODE_EXAMPLES.BASIC_USAGE} />\n      <CE.Text modifiers={['title']}>Tag</CE.Text>\n      <CE.Text\n        content={[\n          'Each <mark>Content Element</mark> has a default tag applied by name of the element.',\n          'f the tag is provided explicitely it will override a default value.',\n          'It also depends on a template’s implementation.',\n        ]}\n      />\n      <CodeExampleImage src={ImageTag} />\n      <CE.Text modifiers={['title']}>Modifiers</CE.Text>\n      <CE.Text\n        content={[\n          'By modifiers you adjust styles or behavoiur of the generated HTML structure.',\n          'Each modifier is a string that represents a meaningful label for the particular element in HTML structure.',\n          'Modifiers extend base <mark>Content Element</mark> class name and might change bahaviour, f.e. override a default tag in case tag was not provided explicitely via ‘tag’ property.',\n        ]}\n      />\n      <CodeExampleImage src={ImageModifier} />\n      <CE.Text modifiers={['list-title']}>Modifiers have following features:</CE.Text>\n      <CE.List modifiers={['disc']}>\n        <>\n          <CE.Text>Above and Beyond</CE.Text>\n          <CodeExampleImage src={ImageModifier1} />\n          <CE.Text\n            content={[\n              '<code>above-[$ce-breakpoint]</code> - styles are applied for screen size ≥ <code>$ce-breakpoint-value</code>',\n              '<code>beyond-[$ce-breakpoint]</code> - styles are applied for screen size < <code>$ce-breakpoint-value</code>',\n            ]}\n          />\n          <CodeExampleImage src={ImageModifier2} />\n        </>\n        <>\n          <CE.Text>Size</CE.Text>\n          <CE.Text>To define Content Element size use breakpoint key as a modifier:</CE.Text>\n          <CodeExampleImage src={ImageModifier3} />\n        </>\n      </CE.List>\n      <CE.Text modifiers={['title']}>Config</CE.Text>\n      <CE.Text\n        content={[\n          'By config you can adjust all element properties.',\n          'Properties provided via config will be applied at main priority.',\n        ]}\n      />\n      <CodeExampleImage src={ImageConfig} />\n    </CE.Block>\n  );\n};\n","import React from 'react';\nimport { CE } from 'react-content-elements';\nimport { ContentElementConfigProps } from 'react-content-elements';\nimport { CodeExampleImage } from '../code-example-image';\nimport ImageByName from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.23.46.png';\nimport ImageByModifier from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.23.55.png';\nimport ImageWithModifier from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.24.06.png';\nimport ImageOtherModifiers from '../../assets/images/code-examples/Screenshot 2023-04-02 at 15.24.12.png';\n\nexport interface DailyCardProps extends React.PropsWithChildren {\n  itemIndex?: number;\n  image?: ContentElementConfigProps<'image'>;\n  title?: ContentElementConfigProps<'text'>;\n}\n\nexport const DocsCss = ({ image, title }: DailyCardProps) => {\n  return (\n    <CE.Block className='docs-html'>\n      <CE.Text>Base Content Element class name is:</CE.Text>\n      <CE.Text modifiers={['with-disc']} content={['<code>ce ce-[name]</code>']} />\n      <CE.Text>Modifiers extend the base Content Element class name with following pattern: </CE.Text>\n      <CE.Text\n        modifiers={['with-disc']}\n        content={['<code>ce ce-[name] ce--[modifier] ce--[another-modifier]</code>']}\n      />\n\n      <CE.Text>\n        Styles are applied to the <mark>Content Elements</mark> via mixins.\n      </CE.Text>\n      <CE.Text modifiers={['title']}>@byName</CE.Text>\n      <CodeExampleImage src={ImageByName} />\n\n      <CE.Text modifiers={['title']}>@byModifier</CE.Text>\n      <CodeExampleImage src={ImageByModifier} />\n\n      <CE.Text modifiers={['title']}>@withModifier</CE.Text>\n      <CodeExampleImage src={ImageWithModifier} />\n\n      <CE.Text modifiers={['list-title']}>\n        <mark>Additional mixins:</mark>\n      </CE.Text>\n      <CE.List modifiers={['disc']} content={['<code>@nextByName</code>', '<code>@nextByModifier</code>']} />\n      <CodeExampleImage src={ImageOtherModifiers} />\n    </CE.Block>\n  );\n};\n","import './styles.scss';\nimport { default as Index } from './template';\n\nexport default Index;\n",null,"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexports.isPlainObject = isPlainObject;\n","/* @flow */\n\nexport default (times: number, tabStop: number): string => {\n  if (times === 0) {\n    return '';\n  }\n\n  return new Array(times * tabStop).fill(' ').join('');\n};\n","/* @flow */\nimport * as React from 'react';\n\nfunction safeSortObject(value: any, seen: WeakSet<any>): any {\n  // return non-object value as is\n  if (value === null || typeof value !== 'object') {\n    return value;\n  }\n\n  // return date, regexp and react element values as is\n  if (\n    value instanceof Date ||\n    value instanceof RegExp ||\n    React.isValidElement(value)\n  ) {\n    return value;\n  }\n\n  seen.add(value);\n\n  // make a copy of array with each item passed through the sorting algorithm\n  if (Array.isArray(value)) {\n    return value.map(v => safeSortObject(v, seen));\n  }\n\n  // make a copy of object with key sorted\n  return Object.keys(value)\n    .sort()\n    .reduce((result, key) => {\n      if (key === '_owner') {\n        return result;\n      }\n      if (key === 'current' || seen.has(value[key])) {\n        // eslint-disable-next-line no-param-reassign\n        result[key] = '[Circular]';\n      } else {\n        // eslint-disable-next-line no-param-reassign\n        result[key] = safeSortObject(value[key], seen);\n      }\n      return result;\n    }, {});\n}\n\nexport default function sortObject(value: any): any {\n  return safeSortObject(value, new WeakSet());\n}\n","/* @flow */\n/* eslint-disable no-use-before-define */\n\nimport type { Key } from 'react';\n\ntype PropsType = { [key: string]: any };\ntype DefaultPropsType = { [key: string]: any };\n\nexport type StringTreeNode = {|\n  type: 'string',\n  value: string,\n|};\n\nexport type NumberTreeNode = {|\n  type: 'number',\n  value: number,\n|};\n\nexport type ReactElementTreeNode = {|\n  type: 'ReactElement',\n  displayName: string,\n  props: PropsType,\n  defaultProps: DefaultPropsType,\n  childrens: TreeNode[],\n|};\n\nexport type ReactFragmentTreeNode = {|\n  type: 'ReactFragment',\n  key: ?Key,\n  childrens: TreeNode[],\n|};\n\nexport type TreeNode =\n  | StringTreeNode\n  | NumberTreeNode\n  | ReactElementTreeNode\n  | ReactFragmentTreeNode;\n\nexport const createStringTreeNode = (value: string): StringTreeNode => ({\n  type: 'string',\n  value,\n});\n\nexport const createNumberTreeNode = (value: number): NumberTreeNode => ({\n  type: 'number',\n  value,\n});\n\nexport const createReactElementTreeNode = (\n  displayName: string,\n  props: PropsType,\n  defaultProps: DefaultPropsType,\n  childrens: TreeNode[]\n): ReactElementTreeNode => ({\n  type: 'ReactElement',\n  displayName,\n  props,\n  defaultProps,\n  childrens,\n});\n\nexport const createReactFragmentTreeNode = (\n  key: ?Key,\n  childrens: TreeNode[]\n): ReactFragmentTreeNode => ({\n  type: 'ReactFragment',\n  key,\n  childrens,\n});\n","/* @flow */\n\nimport React, { type Element as ReactElement, Fragment } from 'react';\nimport {\n  ForwardRef,\n  isContextConsumer,\n  isContextProvider,\n  isForwardRef,\n  isLazy,\n  isMemo,\n  isProfiler,\n  isStrictMode,\n  isSuspense,\n  Memo,\n} from 'react-is';\nimport type { Options } from './../options';\nimport {\n  createStringTreeNode,\n  createNumberTreeNode,\n  createReactElementTreeNode,\n  createReactFragmentTreeNode,\n} from './../tree';\nimport type { TreeNode } from './../tree';\n\nconst supportFragment = Boolean(Fragment);\n\nconst getFunctionTypeName = (functionType): string => {\n  if (!functionType.name || functionType.name === '_default') {\n    return 'No Display Name';\n  }\n  return functionType.name;\n};\n\nconst getWrappedComponentDisplayName = (Component: *): string => {\n  switch (true) {\n    case Boolean(Component.displayName):\n      return Component.displayName;\n    case Component.$$typeof === Memo:\n      return getWrappedComponentDisplayName(Component.type);\n    case Component.$$typeof === ForwardRef:\n      return getWrappedComponentDisplayName(Component.render);\n    default:\n      return getFunctionTypeName(Component);\n  }\n};\n\n// heavily inspired by:\n// https://github.com/facebook/react/blob/3746eaf985dd92f8aa5f5658941d07b6b855e9d9/packages/react-devtools-shared/src/backend/renderer.js#L399-L496\nconst getReactElementDisplayName = (element: ReactElement<*>): string => {\n  switch (true) {\n    case typeof element.type === 'string':\n      return element.type;\n    case typeof element.type === 'function':\n      if (element.type.displayName) {\n        return element.type.displayName;\n      }\n      return getFunctionTypeName(element.type);\n    case isForwardRef(element):\n    case isMemo(element):\n      return getWrappedComponentDisplayName(element.type);\n    case isContextConsumer(element):\n      return `${element.type._context.displayName || 'Context'}.Consumer`;\n    case isContextProvider(element):\n      return `${element.type._context.displayName || 'Context'}.Provider`;\n    case isLazy(element):\n      return 'Lazy';\n    case isProfiler(element):\n      return 'Profiler';\n    case isStrictMode(element):\n      return 'StrictMode';\n    case isSuspense(element):\n      return 'Suspense';\n    default:\n      return 'UnknownElementType';\n  }\n};\n\nconst noChildren = (propsValue, propName) => propName !== 'children';\n\nconst onlyMeaningfulChildren = (children): boolean =>\n  children !== true &&\n  children !== false &&\n  children !== null &&\n  children !== '';\n\nconst filterProps = (originalProps: {}, cb: (any, string) => boolean) => {\n  const filteredProps = {};\n\n  Object.keys(originalProps)\n    .filter(key => cb(originalProps[key], key))\n    .forEach(key => (filteredProps[key] = originalProps[key]));\n\n  return filteredProps;\n};\n\nconst parseReactElement = (\n  element: ReactElement<*> | string | number,\n  options: Options\n): TreeNode => {\n  const { displayName: displayNameFn = getReactElementDisplayName } = options;\n\n  if (typeof element === 'string') {\n    return createStringTreeNode(element);\n  } else if (typeof element === 'number') {\n    return createNumberTreeNode(element);\n  } else if (!React.isValidElement(element)) {\n    throw new Error(\n      `react-element-to-jsx-string: Expected a React.Element, got \\`${typeof element}\\``\n    );\n  }\n\n  const displayName = displayNameFn(element);\n\n  const props = filterProps(element.props, noChildren);\n  if (element.ref !== null) {\n    props.ref = element.ref;\n  }\n\n  const key = element.key;\n  if (typeof key === 'string' && key.search(/^\\./)) {\n    // React automatically add key=\".X\" when there are some children\n    props.key = key;\n  }\n\n  const defaultProps = filterProps(element.type.defaultProps || {}, noChildren);\n  const childrens = React.Children.toArray(element.props.children)\n    .filter(onlyMeaningfulChildren)\n    .map(child => parseReactElement(child, options));\n\n  if (supportFragment && element.type === Fragment) {\n    return createReactFragmentTreeNode(key, childrens);\n  }\n\n  return createReactElementTreeNode(\n    displayName,\n    props,\n    defaultProps,\n    childrens\n  );\n};\n\nexport default parseReactElement;\n","import type { Options } from './../options';\n\nfunction noRefCheck() {}\n\nexport const inlineFunction = (fn: any): string =>\n  fn\n    .toString()\n    .split('\\n')\n    .map(line => line.trim())\n    .join('');\n\nexport const preserveFunctionLineBreak = (fn: any): string => fn.toString();\n\nconst defaultFunctionValue = inlineFunction;\n\nexport default (fn: Function, options: Options): string => {\n  const { functionValue = defaultFunctionValue, showFunctions } = options;\n  if (!showFunctions && functionValue === defaultFunctionValue) {\n    return functionValue(noRefCheck);\n  }\n\n  return functionValue(fn);\n};\n","/* @flow */\n\nimport { isPlainObject } from 'is-plain-object';\nimport { isValidElement } from 'react';\nimport formatComplexDataStructure from './formatComplexDataStructure';\nimport formatFunction from './formatFunction';\nimport formatTreeNode from './formatTreeNode';\nimport type { Options } from './../options';\nimport parseReactElement from './../parser/parseReactElement';\n\nconst escape = (s: string): string => s.replace(/\"/g, '&quot;');\n\nconst formatPropValue = (\n  propValue: any,\n  inline: boolean,\n  lvl: number,\n  options: Options\n): string => {\n  if (typeof propValue === 'number') {\n    return `{${String(propValue)}}`;\n  }\n\n  if (typeof propValue === 'string') {\n    return `\"${escape(propValue)}\"`;\n  }\n\n  // > \"Symbols (new in ECMAScript 2015, not yet supported in Flow)\"\n  // @see: https://flow.org/en/docs/types/primitives/\n  // $FlowFixMe: Flow does not support Symbol\n  if (typeof propValue === 'symbol') {\n    const symbolDescription = propValue\n      .valueOf()\n      .toString()\n      .replace(/Symbol\\((.*)\\)/, '$1');\n\n    if (!symbolDescription) {\n      return `{Symbol()}`;\n    }\n\n    return `{Symbol('${symbolDescription}')}`;\n  }\n\n  if (typeof propValue === 'function') {\n    return `{${formatFunction(propValue, options)}}`;\n  }\n\n  if (isValidElement(propValue)) {\n    return `{${formatTreeNode(\n      parseReactElement(propValue, options),\n      true,\n      lvl,\n      options\n    )}}`;\n  }\n\n  if (propValue instanceof Date) {\n    if (isNaN(propValue.valueOf())) {\n      return `{new Date(NaN)}`;\n    }\n    return `{new Date(\"${propValue.toISOString()}\")}`;\n  }\n\n  if (isPlainObject(propValue) || Array.isArray(propValue)) {\n    return `{${formatComplexDataStructure(propValue, inline, lvl, options)}}`;\n  }\n\n  return `{${String(propValue)}}`;\n};\n\nexport default formatPropValue;\n","/* @flow */\n\nimport { isValidElement } from 'react';\nimport { prettyPrint } from '@base2/pretty-print-object';\nimport sortObject from './sortObject';\nimport parseReactElement from './../parser/parseReactElement';\nimport formatTreeNode from './formatTreeNode';\nimport formatFunction from './formatFunction';\nimport spacer from './spacer';\nimport type { Options } from './../options';\n\nexport default (\n  value: Object | Array<any>,\n  inline: boolean,\n  lvl: number,\n  options: Options\n): string => {\n  const normalizedValue = sortObject(value);\n\n  const stringifiedValue = prettyPrint(normalizedValue, {\n    transform: (currentObj, prop, originalResult) => {\n      const currentValue = currentObj[prop];\n\n      if (currentValue && isValidElement(currentValue)) {\n        return formatTreeNode(\n          parseReactElement(currentValue, options),\n          true,\n          lvl,\n          options\n        );\n      }\n\n      if (typeof currentValue === 'function') {\n        return formatFunction(currentValue, options);\n      }\n\n      return originalResult;\n    },\n  });\n\n  if (inline) {\n    return stringifiedValue\n      .replace(/\\s+/g, ' ')\n      .replace(/{ /g, '{')\n      .replace(/ }/g, '}')\n      .replace(/\\[ /g, '[')\n      .replace(/ ]/g, ']');\n  }\n\n  // Replace tabs with spaces, and add necessary indentation in front of each new line\n  return stringifiedValue\n    .replace(/\\t/g, spacer(1, options.tabStop))\n    .replace(/\\n([^$])/g, `\\n${spacer(lvl + 1, options.tabStop)}$1`);\n};\n","/* @flow */\n\nimport { createStringTreeNode } from './../tree';\nimport type { TreeNode } from './../tree';\n\nexport default (\n  previousNodes: TreeNode[],\n  currentNode: TreeNode\n): TreeNode[] => {\n  const nodes = previousNodes.slice(\n    0,\n    previousNodes.length > 0 ? previousNodes.length - 1 : 0\n  );\n  const previousNode = previousNodes[previousNodes.length - 1];\n\n  if (\n    previousNode &&\n    (currentNode.type === 'string' || currentNode.type === 'number') &&\n    (previousNode.type === 'string' || previousNode.type === 'number')\n  ) {\n    nodes.push(\n      createStringTreeNode(\n        String(previousNode.value) + String(currentNode.value)\n      )\n    );\n  } else {\n    if (previousNode) {\n      nodes.push(previousNode);\n    }\n\n    nodes.push(currentNode);\n  }\n\n  return nodes;\n};\n","/* @flow */\n\nimport spacer from './spacer';\nimport formatTreeNode from './formatTreeNode';\nimport formatProp from './formatProp';\nimport mergeSiblingPlainStringChildrenReducer from './mergeSiblingPlainStringChildrenReducer';\nimport sortPropsByNames from './sortPropsByNames';\nimport createPropFilter from './createPropFilter';\nimport type { Options } from './../options';\nimport type { ReactElementTreeNode } from './../tree';\n\nconst compensateMultilineStringElementIndentation = (\n  element,\n  formattedElement: string,\n  inline: boolean,\n  lvl: number,\n  options: Options\n) => {\n  const { tabStop } = options;\n\n  if (element.type === 'string') {\n    return formattedElement\n      .split('\\n')\n      .map((line, offset) => {\n        if (offset === 0) {\n          return line;\n        }\n\n        return `${spacer(lvl, tabStop)}${line}`;\n      })\n      .join('\\n');\n  }\n\n  return formattedElement;\n};\n\nconst formatOneChildren = (\n  inline: boolean,\n  lvl: number,\n  options: Options\n) => element =>\n  compensateMultilineStringElementIndentation(\n    element,\n    formatTreeNode(element, inline, lvl, options),\n    inline,\n    lvl,\n    options\n  );\n\nconst onlyPropsWithOriginalValue = (defaultProps, props) => propName => {\n  const haveDefaultValue = Object.keys(defaultProps).includes(propName);\n  return (\n    !haveDefaultValue ||\n    (haveDefaultValue && defaultProps[propName] !== props[propName])\n  );\n};\n\nconst isInlineAttributeTooLong = (\n  attributes: string[],\n  inlineAttributeString: string,\n  lvl: number,\n  tabStop: number,\n  maxInlineAttributesLineLength: ?number\n): boolean => {\n  if (!maxInlineAttributesLineLength) {\n    return attributes.length > 1;\n  }\n\n  return (\n    spacer(lvl, tabStop).length + inlineAttributeString.length >\n    maxInlineAttributesLineLength\n  );\n};\n\nconst shouldRenderMultilineAttr = (\n  attributes: string[],\n  inlineAttributeString: string,\n  containsMultilineAttr: boolean,\n  inline: boolean,\n  lvl: number,\n  tabStop: number,\n  maxInlineAttributesLineLength: ?number\n): boolean =>\n  (isInlineAttributeTooLong(\n    attributes,\n    inlineAttributeString,\n    lvl,\n    tabStop,\n    maxInlineAttributesLineLength\n  ) ||\n    containsMultilineAttr) &&\n  !inline;\n\nexport default (\n  node: ReactElementTreeNode,\n  inline: boolean,\n  lvl: number,\n  options: Options\n): string => {\n  const {\n    type,\n    displayName = '',\n    childrens,\n    props = {},\n    defaultProps = {},\n  } = node;\n\n  if (type !== 'ReactElement') {\n    throw new Error(\n      `The \"formatReactElementNode\" function could only format node of type \"ReactElement\". Given:  ${type}`\n    );\n  }\n\n  const {\n    filterProps,\n    maxInlineAttributesLineLength,\n    showDefaultProps,\n    sortProps,\n    tabStop,\n  } = options;\n\n  let out = `<${displayName}`;\n\n  let outInlineAttr = out;\n  let outMultilineAttr = out;\n  let containsMultilineAttr = false;\n\n  const visibleAttributeNames = [];\n\n  const propFilter = createPropFilter(props, filterProps);\n\n  Object.keys(props)\n    .filter(propFilter)\n    .filter(onlyPropsWithOriginalValue(defaultProps, props))\n    .forEach(propName => visibleAttributeNames.push(propName));\n\n  Object.keys(defaultProps)\n    .filter(propFilter)\n    .filter(() => showDefaultProps)\n    .filter(defaultPropName => !visibleAttributeNames.includes(defaultPropName))\n    .forEach(defaultPropName => visibleAttributeNames.push(defaultPropName));\n\n  const attributes = sortPropsByNames(sortProps)(visibleAttributeNames);\n\n  attributes.forEach(attributeName => {\n    const {\n      attributeFormattedInline,\n      attributeFormattedMultiline,\n      isMultilineAttribute,\n    } = formatProp(\n      attributeName,\n      Object.keys(props).includes(attributeName),\n      props[attributeName],\n      Object.keys(defaultProps).includes(attributeName),\n      defaultProps[attributeName],\n      inline,\n      lvl,\n      options\n    );\n\n    if (isMultilineAttribute) {\n      containsMultilineAttr = true;\n    }\n\n    outInlineAttr += attributeFormattedInline;\n    outMultilineAttr += attributeFormattedMultiline;\n  });\n\n  outMultilineAttr += `\\n${spacer(lvl, tabStop)}`;\n\n  if (\n    shouldRenderMultilineAttr(\n      attributes,\n      outInlineAttr,\n      containsMultilineAttr,\n      inline,\n      lvl,\n      tabStop,\n      maxInlineAttributesLineLength\n    )\n  ) {\n    out = outMultilineAttr;\n  } else {\n    out = outInlineAttr;\n  }\n\n  if (childrens && childrens.length > 0) {\n    const newLvl = lvl + 1;\n\n    out += '>';\n\n    if (!inline) {\n      out += '\\n';\n      out += spacer(newLvl, tabStop);\n    }\n\n    out += childrens\n      .reduce(mergeSiblingPlainStringChildrenReducer, [])\n      .map(formatOneChildren(inline, newLvl, options))\n      .join(!inline ? `\\n${spacer(newLvl, tabStop)}` : '');\n\n    if (!inline) {\n      out += '\\n';\n      out += spacer(newLvl - 1, tabStop);\n    }\n    out += `</${displayName}>`;\n  } else {\n    if (\n      !isInlineAttributeTooLong(\n        attributes,\n        outInlineAttr,\n        lvl,\n        tabStop,\n        maxInlineAttributesLineLength\n      )\n    ) {\n      out += ' ';\n    }\n\n    out += '/>';\n  }\n\n  return out;\n};\n","/* @flow */\n\nexport default function createPropFilter(\n  props: {},\n  filter: string[] | ((any, string) => boolean)\n) {\n  if (Array.isArray(filter)) {\n    return (key: string) => filter.indexOf(key) === -1;\n  } else {\n    return (key: string) => filter(props[key], key);\n  }\n}\n","/* @flow */\n\nconst isKeyOrRefProps = (propName: string) => ['key', 'ref'].includes(propName);\n\nexport default (shouldSortUserProps: boolean) => (\n  props: string[]\n): string[] => {\n  const haveKeyProp = props.includes('key');\n  const haveRefProp = props.includes('ref');\n\n  const userPropsOnly = props.filter(oneProp => !isKeyOrRefProps(oneProp));\n\n  const sortedProps = shouldSortUserProps\n    ? [...userPropsOnly.sort()] // We use basic lexical order\n    : [...userPropsOnly];\n\n  if (haveRefProp) {\n    sortedProps.unshift('ref');\n  }\n\n  if (haveKeyProp) {\n    sortedProps.unshift('key');\n  }\n\n  return sortedProps;\n};\n","/* @flow */\n\nimport spacer from './spacer';\nimport formatPropValue from './formatPropValue';\nimport type { Options } from './../options';\n\nexport default (\n  name: string,\n  hasValue: boolean,\n  value: any,\n  hasDefaultValue: boolean,\n  defaultValue: any,\n  inline: boolean,\n  lvl: number,\n  options: Options\n): {\n  attributeFormattedInline: string,\n  attributeFormattedMultiline: string,\n  isMultilineAttribute: boolean,\n} => {\n  if (!hasValue && !hasDefaultValue) {\n    throw new Error(\n      `The prop \"${name}\" has no value and no default: could not be formatted`\n    );\n  }\n\n  const usedValue = hasValue ? value : defaultValue;\n\n  const { useBooleanShorthandSyntax, tabStop } = options;\n\n  const formattedPropValue = formatPropValue(usedValue, inline, lvl, options);\n\n  let attributeFormattedInline = ' ';\n  let attributeFormattedMultiline = `\\n${spacer(lvl + 1, tabStop)}`;\n  const isMultilineAttribute = formattedPropValue.includes('\\n');\n\n  if (\n    useBooleanShorthandSyntax &&\n    formattedPropValue === '{false}' &&\n    !hasDefaultValue\n  ) {\n    // If a boolean is false and not different from it's default, we do not render the attribute\n    attributeFormattedInline = '';\n    attributeFormattedMultiline = '';\n  } else if (useBooleanShorthandSyntax && formattedPropValue === '{true}') {\n    attributeFormattedInline += `${name}`;\n    attributeFormattedMultiline += `${name}`;\n  } else {\n    attributeFormattedInline += `${name}=${formattedPropValue}`;\n    attributeFormattedMultiline += `${name}=${formattedPropValue}`;\n  }\n\n  return {\n    attributeFormattedInline,\n    attributeFormattedMultiline,\n    isMultilineAttribute,\n  };\n};\n","/* @flow */\n\nimport type { Key } from 'react';\nimport formatReactElementNode from './formatReactElementNode';\nimport type { Options } from './../options';\nimport type {\n  ReactElementTreeNode,\n  ReactFragmentTreeNode,\n  TreeNode,\n} from './../tree';\n\nconst REACT_FRAGMENT_TAG_NAME_SHORT_SYNTAX = '';\nconst REACT_FRAGMENT_TAG_NAME_EXPLICIT_SYNTAX = 'React.Fragment';\n\nconst toReactElementTreeNode = (\n  displayName: string,\n  key: ?Key,\n  childrens: TreeNode[]\n): ReactElementTreeNode => {\n  let props = {};\n  if (key) {\n    props = { key };\n  }\n\n  return {\n    type: 'ReactElement',\n    displayName,\n    props,\n    defaultProps: {},\n    childrens,\n  };\n};\n\nconst isKeyedFragment = ({ key }: ReactFragmentTreeNode) => Boolean(key);\nconst hasNoChildren = ({ childrens }: ReactFragmentTreeNode) =>\n  childrens.length === 0;\n\nexport default (\n  node: ReactFragmentTreeNode,\n  inline: boolean,\n  lvl: number,\n  options: Options\n): string => {\n  const { type, key, childrens } = node;\n\n  if (type !== 'ReactFragment') {\n    throw new Error(\n      `The \"formatReactFragmentNode\" function could only format node of type \"ReactFragment\". Given: ${type}`\n    );\n  }\n\n  const { useFragmentShortSyntax } = options;\n\n  let displayName;\n  if (useFragmentShortSyntax) {\n    if (hasNoChildren(node) || isKeyedFragment(node)) {\n      displayName = REACT_FRAGMENT_TAG_NAME_EXPLICIT_SYNTAX;\n    } else {\n      displayName = REACT_FRAGMENT_TAG_NAME_SHORT_SYNTAX;\n    }\n  } else {\n    displayName = REACT_FRAGMENT_TAG_NAME_EXPLICIT_SYNTAX;\n  }\n\n  return formatReactElementNode(\n    toReactElementTreeNode(displayName, key, childrens),\n    inline,\n    lvl,\n    options\n  );\n};\n","/* @flow */\n\nimport formatReactElementNode from './formatReactElementNode';\nimport formatReactFragmentNode from './formatReactFragmentNode';\nimport type { Options } from './../options';\nimport type { TreeNode } from './../tree';\n\nconst jsxStopChars = ['<', '>', '{', '}'];\nconst shouldBeEscaped = (s: string) =>\n  jsxStopChars.some(jsxStopChar => s.includes(jsxStopChar));\n\nconst escape = (s: string) => {\n  if (!shouldBeEscaped(s)) {\n    return s;\n  }\n\n  return `{\\`${s}\\`}`;\n};\n\nconst preserveTrailingSpace = (s: string) => {\n  let result = s;\n  if (result.endsWith(' ')) {\n    result = result.replace(/^(.*?)(\\s+)$/, \"$1{'$2'}\");\n  }\n\n  if (result.startsWith(' ')) {\n    result = result.replace(/^(\\s+)(.*)$/, \"{'$1'}$2\");\n  }\n\n  return result;\n};\n\nexport default (\n  node: TreeNode,\n  inline: boolean,\n  lvl: number,\n  options: Options\n): string => {\n  if (node.type === 'number') {\n    return String(node.value);\n  }\n\n  if (node.type === 'string') {\n    return node.value\n      ? `${preserveTrailingSpace(escape(String(node.value)))}`\n      : '';\n  }\n\n  if (node.type === 'ReactElement') {\n    return formatReactElementNode(node, inline, lvl, options);\n  }\n\n  if (node.type === 'ReactFragment') {\n    return formatReactFragmentNode(node, inline, lvl, options);\n  }\n\n  throw new TypeError(`Unknow format type \"${node.type}\"`);\n};\n","/* @flow */\n\nimport formatTreeNode from './formatTreeNode';\nimport type { Options } from './../options';\nimport type { TreeNode } from './../tree';\n\nexport default (node: TreeNode, options: Options): string =>\n  formatTreeNode(node, false, 0, options);\n","/* @flow */\n\nimport formatTree from './formatter/formatTree';\nimport parseReactElement from './parser/parseReactElement';\nimport type { Element as ReactElement } from 'react';\nimport type { Options } from './options';\n\nconst reactElementToJsxString = (\n  element: ReactElement<any>,\n  {\n    filterProps = [],\n    showDefaultProps = true,\n    showFunctions = false,\n    functionValue,\n    tabStop = 2,\n    useBooleanShorthandSyntax = true,\n    useFragmentShortSyntax = true,\n    sortProps = true,\n    maxInlineAttributesLineLength,\n    displayName,\n  }: Options = {}\n) => {\n  if (!element) {\n    throw new Error('react-element-to-jsx-string: Expected a ReactElement');\n  }\n\n  const options = {\n    filterProps,\n    showDefaultProps,\n    showFunctions,\n    functionValue,\n    tabStop,\n    useBooleanShorthandSyntax,\n    useFragmentShortSyntax,\n    sortProps,\n    maxInlineAttributesLineLength,\n    displayName,\n  };\n\n  return formatTree(parseReactElement(element, options), options);\n};\n\nexport default reactElementToJsxString;\n\nexport {\n  inlineFunction,\n  preserveFunctionLineBreak,\n} from './formatter/formatFunction';\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n"],"names":["IndexPage","header","rawContent","modifiers","subHeader","textBlocks","title","text","caption","items","undefined","options","image","src","srcSet","xs","description","useGetData","pathToData","DATA_BY_PAGE","Layout","children","props","CE","config","tag","DocsContentHeader","className","content","SHARED_UTILS","str","charAt","toUpperCase","slice","DISPLAY_NAME_BY_ID","Object","keys","reduce","r","k","toLowerCase","CodeExample","ex","Array","isArray","map","example","CodeExampleTemplate","el","toString","displayNameId","id","console","log","reactElementToJSXString","displayName","CODE_EXAMPLES","BASIC_USAGE","CodeExampleImage","TABS","TemplateByTab","HTML","ImageTag","ImageModifier","ImageModifier1","ImageModifier2","ImageModifier3","ImageConfig","CSS","ImageByName","ImageByModifier","ImageWithModifier","ImageOtherModifiers","React","activeTabId","setActiveTabId","ActiveTabTemplate","listItemTemplate","tab","onClick","seen","exports","prettyPrint","input","pad","tokens","combinedOptions","indent","singleQuotes","inlineCharacterLimit","newLine","newLineOrSpace","value","object","expandWhiteSpace","string","oneLined","replace","RegExp","length","indexOf","prototype","call","String","Date","toISOString","push","ret","i","eol","transform","join","pop","type","isObj","objKeys_1","getOwnPropertySymbols","filter","keySymbol","propertyIsEnumerable","isSymbol","isClassic","test","key","isObject","o","defineProperty","isPlainObject","ctor","prot","constructor","hasOwnProperty","times","tabStop","fill","safeSortObject","_typeof","isValidElement","add","v","sort","result","has","sortObject","WeakSet","createStringTreeNode","supportFragment","Boolean","Fragment","getFunctionTypeName","functionType","name","getWrappedComponentDisplayName","Component","$$typeof","Memo","ForwardRef","render","getReactElementDisplayName","element","isForwardRef","isMemo","isContextConsumer","_context","isContextProvider","isLazy","isProfiler","isStrictMode","isSuspense","noChildren","propsValue","propName","onlyMeaningfulChildren","filterProps","originalProps","cb","filteredProps","forEach","parseReactElement","displayNameFn","createNumberTreeNode","Error","ref","search","defaultProps","childrens","Children","toArray","child","createReactFragmentTreeNode","createReactElementTreeNode","noRefCheck","inlineFunction","fn","split","line","trim","defaultFunctionValue","functionValue","showFunctions","formatPropValue","propValue","inline","lvl","escape","symbolDescription","valueOf","formatFunction","formatTreeNode","isNaN","formatComplexDataStructure","normalizedValue","stringifiedValue","currentObj","prop","originalResult","currentValue","spacer","previousNodes","currentNode","nodes","previousNode","formatOneChildren","compensateMultilineStringElementIndentation","formattedElement","offset","isInlineAttributeTooLong","attributes","inlineAttributeString","maxInlineAttributesLineLength","node","showDefaultProps","sortProps","out","outInlineAttr","outMultilineAttr","containsMultilineAttr","visibleAttributeNames","propFilter","createPropFilter","haveDefaultValue","includes","onlyPropsWithOriginalValue","defaultPropName","shouldSortUserProps","haveKeyProp","haveRefProp","userPropsOnly","oneProp","sortedProps","unshift","attributeName","hasValue","hasDefaultValue","defaultValue","usedValue","useBooleanShorthandSyntax","formattedPropValue","attributeFormattedInline","attributeFormattedMultiline","isMultilineAttribute","formatProp","shouldRenderMultilineAttr","newLvl","mergeSiblingPlainStringChildrenReducer","REACT_FRAGMENT_TAG_NAME_EXPLICIT_SYNTAX","useFragmentShortSyntax","isKeyedFragment","formatReactElementNode","toReactElementTreeNode","jsxStopChars","s","some","jsxStopChar","shouldBeEscaped","preserveTrailingSpace","endsWith","startsWith","formatReactFragmentNode","TypeError","_ref$filterProps","_ref$showDefaultProps","_ref$showFunctions","_ref$tabStop","_ref$useBooleanShorth","_ref$useFragmentShort","_ref$sortProps","formatTree","u","b","Symbol","for","c","d","e","f","g","h","l","m","n","p","q","t","a","ContextConsumer","ContextProvider","Element","Lazy","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isElement","isFragment","isPortal","isSuspenseList","isValidElementType","getModuleId","typeOf","module"],"sourceRoot":""}