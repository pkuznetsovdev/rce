{"version":3,"file":"static/js/426.126be057.chunk.js","mappings":"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","sources":["custom/project-a/data/data-by-page/index-page.ts","custom/project-a/data/data-by-page/index.ts","custom/project-a/data/useGetData.ts","custom/project-a/layout/default/default.tsx","custom/project-a/components/docs-content-header/docs-content-header.tsx","custom/project-a/components/code-example/code-example.tsx","custom/project-a/pages/docs/template.tsx","custom/project-a/components/docs-html/docs-html.tsx","custom/project-a/components/docs-css/docs-css.tsx","custom/project-a/pages/docs/index.tsx"],"sourcesContent":["export default {\n    header: {\n        rawContent: \"React Content Elements\",\n        modifiers: [\"main-header\"],\n    },\n    subHeader: \"Your first Web Content Factory\",\n    textBlocks: [\n        {\n            title: 'Web Content Development(WCD)',\n            text: {\n                rawContent:\n                    '<b>Web Content Development</b> is appliance of your  <i>content data</i> to the digital page' +\n                    '</br>It stands for CRUD operations with the <i>content data</i> of the page',\n            },\n            caption: ''\n        },\n        {\n            title: 'How did you solve it before?',\n            items: [\n                'Use UX lib or develop basic structures internally to get basic reusable structures',\n                'Apply UI lib or develop style system internally to describe the outlook of the code structures',\n                'Maintain the code structures and style system on a daily base',\n                'Refactor it due to changed requirements'\n            ],\n            caption: undefined\n        },\n        {\n            title: 'Why bother?',\n            items: [\n                'Custom approach for basic structures architecture by company/team/developer',\n                'Custom approach for style system by company/team/developer',\n                'Duplicating same patterns by project',\n                'Endless refactoring to meet new requirements',\n            ],\n            caption: undefined\n        },\n        {\n            title: 'Why React Content Elements?',\n            items: [\n                'Formalized HTML and CSS development pattern',\n                // 'Predefined and reusable basic HTML structures for content elements',\n                // 'Single and simple CSS styles structure',\n                // 'Scalable with custom solutions both in HTML and CSS structures',\n            ],\n            caption: undefined\n        },\n    ],\n    options: [\n        {\n            image: {\n                src: \"https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea057.jpg\",\n                srcSet: {\n                    xs: \"https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea058.jpg\",\n                }\n            },\n            // title: \"Option #1\",\n            // TODO FAQ: How to make it work?\n            title: {\n                rawContent: \"Option #1\",\n            },\n            description: \"Description of option\"\n        },\n        {\n            image: \"https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea057.jpg\",\n            title: \"Option #2\",\n            description: \"Description of option\"\n        },\n        {\n            image: \"https://www.investopedia.com/thmb/9wQ2rMbSd2QX2qniP7JRHZTBBvc=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/option-597b2316d56041998fc9e48583fea057.jpg\",\n            title: \"Option #3\",\n            description: \"Description of option\"\n        },\n    ]\n} as const;","import IndexPageData from './index-page';\n\nconst DATA_BY_PAGE = {\n  IndexPage: IndexPageData,\n}\n\nexport default DATA_BY_PAGE;","import DATA_BY_PAGE from \"./data-by-page\";\nimport { PathToData, DataByPath } from \"./types\";\n\nexport function useGetData<Path extends PathToData>(\n  pathToData: Path\n): DataByPath<Path> {\n  // TODO: FIX TS\n  // @ts-ignore\n  return DATA_BY_PAGE[pathToData];\n}\n","import React from \"react\";\nimport { CE } from \"src/ce\";\nimport { MyElementConfig, MyElementProps } from \"src/ce/core/types\";\nimport { Header } from \"../../components\";\n\ninterface LayoutProps\n  extends React.PropsWithChildren<Pick<MyElementProps<\"text\">, \"modifiers\">> {\n  className?: string;\n  title?: MyElementConfig<\"text\">;\n}\n\nexport const Layout = ({\n  modifiers = [],\n  children,\n  title,\n  ...props\n}: LayoutProps) => {\n  return (\n    <CE.Block {...props} modifiers={[\"page\", ...modifiers]}>\n      <CE.Block modifiers={[\"container\"]}>\n        <Header />\n        <CE.Text modifiers={[\"page-title\"]} config={title} />\n      </CE.Block>\n      <CE.Block tag=\"main\" modifiers={[\"main\"]}>\n        {children}\n      </CE.Block>\n    </CE.Block>\n  );\n};\n","import React from \"react\";\nimport { CE } from \"src/ce\";\nimport { MyElementConfigProps } from \"src/ce/core/types\";\n\nexport interface DailyCardProps extends React.PropsWithChildren {\n  itemIndex?: number;\n  image?: MyElementConfigProps<\"image\">;\n  title?: MyElementConfigProps<\"text\">;\n}\n\nexport const DocsContentHeader = ({ image, title }: DailyCardProps) => {\n  return (\n    <CE.Block className=\"docs-content-header\">\n      <CE.Text>\n        <mark>Content Elements</mark> represent basic HTML structures.\n        <br />\n        Development process with <mark>Content Elements</mark> is formalized in\n        terms of generating basic structures(HTML) and styles(CSS).\n        <br />\n        Basic structure is any piece of HTML or/and CSS that is generated via{\" \"}\n        <mark>Content Elements</mark>.\n      </CE.Text>\n      <CE.Text\n        modifiers={[\"list-title\"]}\n        content=\"Let’s clarify a set of dependencies for the web content development flow:\"\n      />\n      <CE.List\n        modifiers={[\"disc\"]}\n        content={[\n          \"HTML (set of basic structures instead of manual code duplications)\",\n          \"CSS (simple and scalable style system, less dependent on HTML structure)\",\n          \"SEO (tag name, aria-attributes, e.t.c. - simple adjustment in one click)\",\n        ]}\n      ></CE.List>\n    </CE.Block>\n  );\n};\n","import React from \"react\";\nimport { CE } from \"src/ce\";\n\nexport interface CodeExampleProps extends Pick<HTMLImageElement, \"src\"> {}\n\nexport const CodeExample = ({ src }: CodeExampleProps) => {\n  return <CE.Image src={src} className=\"code-example\" />;\n};\n","import React from \"react\";\nimport { CE } from \"src/ce\";\n\nimport { Layout } from \"../../layout\";\n\nimport { useGetData } from \"src/custom/project-a/data\";\nimport { DocsContentHeader } from \"src/custom/project-a/components/docs-content-header\";\nimport { DocsHtml } from \"src/custom/project-a/components/docs-html\";\nimport { DocsCss } from \"src/custom/project-a/components/docs-css\";\nimport { DailyCard } from \"../../components\";\n\nconst mainClass = \"docs\";\n\nconst TABS = [\"HTML\", \"CSS\"] as const;\n\nconst TemplateByTab = {\n  HTML: DocsHtml,\n  CSS: DocsCss,\n} as const;\n\nconst Template = () => {\n  const pageData = useGetData(\"IndexPage\");\n\n  const [activeTabId, setActiveTabId] = React.useState<(typeof TABS)[number]>(\n    () => TABS[0]\n  );\n\n  const ActiveTabTemplate = TemplateByTab[activeTabId];\n\n  return (\n    <>\n      <Layout className={mainClass} title=\"Docs\">\n        <CE.Block modifiers={[\"container\", \"docs-content\"]}>\n          <DocsContentHeader />\n          <CE.List\n            modifiers={[\"row\", \"docs-tabs\"]}\n            listItemTemplate={({ tab }) => {\n              return (\n                <CE.Button\n                  modifiers={[\"docs-tab\", activeTabId === tab && \"active\"]}\n                  onClick={() => setActiveTabId(tab)}\n                >\n                  {tab}\n                </CE.Button>\n              );\n            }}\n            content={TABS.map((tab) => ({ tab }))}\n          />\n          <CE.Divider />\n          <ActiveTabTemplate />\n        </CE.Block>\n      </Layout>\n    </>\n  );\n};\n\nexport default Template;\n","import React from \"react\";\nimport { CE } from \"src/ce\";\nimport { MyElementConfigProps } from \"src/ce/core/types\";\nimport { CodeExample } from \"../code-example\";\nimport ImageCE from \"../../assets/images/code-examples/Screenshot 2023-04-02 at 15.22.18.png\";\nimport ImageCE2 from \"../../assets/images/code-examples/Screenshot 2023-04-02 at 15.22.28.png\";\nimport ImageTag from \"../../assets/images/code-examples/Screenshot 2023-04-02 at 15.22.35.png\";\nimport ImageModifier from \"../../assets/images/code-examples/Screenshot 2023-04-02 at 15.22.45.png\";\nimport ImageModifier1 from \"../../assets/images/code-examples/Screenshot 2023-04-02 at 15.23.04.png\";\nimport ImageModifier2 from \"../../assets/images/code-examples/Screenshot 2023-04-02 at 15.23.16.png\";\nimport ImageModifier3 from \"../../assets/images/code-examples/Screenshot 2023-04-04 at 22.24.54.png\";\nimport ImageConfig from \"../../assets/images/code-examples/Screenshot 2023-04-02 at 15.23.38.png\";\n\nexport interface DailyCardProps extends React.PropsWithChildren {\n  itemIndex?: number;\n  image?: MyElementConfigProps<\"image\">;\n  title?: MyElementConfigProps<\"text\">;\n}\n\nexport const DocsHtml = ({ image, title }: DailyCardProps) => {\n  return (\n    <CE.Block className=\"docs-html\">\n      <CE.Text modifiers={[\"list-title\"]}>\n        <mark>Content Elements</mark> are grouped by its role in the page:\n      </CE.Text>\n      <CE.List\n        modifiers={[\"disc\"]}\n        content={[\"Text\", \"Image\", \"Block\", \"List\", \"Link\"]}\n      />\n      <CE.Text modifiers={[\"list-title\"]}>\n        All <mark>Content Elements</mark> have 3 main properties:\n      </CE.Text>\n      <CE.List modifiers={[\"disc\"]} content={[\"tag\", \"modifiers\", \"config\"]} />\n      <CE.Text modifiers={[\"list-title\"]}>\n        All <mark>Content Elements</mark> have base class name:\n      </CE.Text>\n      <CE.List\n        modifiers={[\"disc\"]}\n        content={[\n          \"<code>ce ce-[name]</code><br />f.e. ‘ce ce-text’ for <mark>Text Content Element</mark>\",\n        ]}\n      />\n      <CodeExample src={ImageCE} />\n      <CodeExample src={ImageCE2} />\n      <CE.Text modifiers={[\"title\"]}>Tag</CE.Text>\n      <CE.Text\n        content={[\n          \"Each <mark>Content Element</mark> has a default tag applied by name of the element.\",\n          \"f the tag is provided explicitely it will override a default value.\",\n          \"It also depends on a template’s implementation.\",\n        ]}\n      />\n      <CodeExample src={ImageTag} />\n      <CE.Text modifiers={[\"title\"]}>Modifiers</CE.Text>\n      <CE.Text\n        content={[\n          \"By modifiers you adjust styles or behavoiur of the generated HTML structure.\",\n          \"Each modifier is a string that represents a meaningful label for the particular element in HTML structure.\",\n          \"Modifiers extend base <mark>Content Element</mark> class name and might change bahaviour, f.e. override a default tag in case tag was not provided explicitely via ‘tag’ property.\",\n        ]}\n      />\n      <CodeExample src={ImageModifier} />\n      <CE.Text modifiers={[\"list-title\"]}>\n        Modifiers have following features:\n      </CE.Text>\n      <CE.List modifiers={[\"disc\"]}>\n        <>\n          <CE.Text>Above and Beyond</CE.Text>\n          <CodeExample src={ImageModifier1} />\n          <CE.Text\n            content={[\n              \"<code>above-[$ce-breakpoint]</code> - styles are applied for screen size ≥ <code>$ce-breakpoint-value</code>\",\n              \"<code>beyond-[$ce-breakpoint]</code> - styles are applied for screen size < <code>$ce-breakpoint-value</code>\",\n            ]}\n          />\n          <CodeExample src={ImageModifier2} />\n        </>\n        <>\n          <CE.Text>Size</CE.Text>\n          <CE.Text>\n            To define Content Element size use breakpoint key as a modifier:\n          </CE.Text>\n          <CodeExample src={ImageModifier3} />\n        </>\n      </CE.List>\n      <CE.Text modifiers={[\"title\"]}>Config</CE.Text>\n      <CE.Text\n        content={[\n          \"By config you can adjust all element properties.\",\n          \"Properties provided via config will be applied at main priority.\",\n        ]}\n      />\n      <CodeExample src={ImageConfig} />\n    </CE.Block>\n  );\n};\n","import React from \"react\";\nimport { CE } from \"src/ce\";\nimport { MyElementConfigProps } from \"src/ce/core/types\";\nimport { CodeExample } from \"../code-example\";\nimport ImageByName from \"../../assets/images/code-examples/Screenshot 2023-04-02 at 15.23.46.png\";\nimport ImageByModifier from \"../../assets/images/code-examples/Screenshot 2023-04-02 at 15.23.55.png\";\nimport ImageWithModifier from \"../../assets/images/code-examples/Screenshot 2023-04-02 at 15.24.06.png\";\nimport ImageOtherModifiers from \"../../assets/images/code-examples/Screenshot 2023-04-02 at 15.24.12.png\";\n\nexport interface DailyCardProps extends React.PropsWithChildren {\n  itemIndex?: number;\n  image?: MyElementConfigProps<\"image\">;\n  title?: MyElementConfigProps<\"text\">;\n}\n\nexport const DocsCss = ({ image, title }: DailyCardProps) => {\n  return (\n    <CE.Block className=\"docs-html\">\n      <CE.Text>Base Content Element class name is:</CE.Text>\n      <CE.Text\n        modifiers={[\"with-disc\"]}\n        content={[\"<code>ce ce-[name]</code>\"]}\n      />\n      <CE.Text>\n        Modifiers extend the base Content Element class name with following\n        pattern:{\" \"}\n      </CE.Text>\n      <CE.Text\n        modifiers={[\"with-disc\"]}\n        content={[\n          \"<code>ce ce-[name] ce--[modifier] ce--[another-modifier]</code>\",\n        ]}\n      />\n\n      <CE.Text>\n        Styles are applied to the <mark>Content Elements</mark> via mixins.\n      </CE.Text>\n      <CE.Text modifiers={[\"title\"]}>@byName</CE.Text>\n      <CodeExample src={ImageByName} />\n\n      <CE.Text modifiers={[\"title\"]}>@byModifier</CE.Text>\n      <CodeExample src={ImageByModifier} />\n\n      <CE.Text modifiers={[\"title\"]}>@withModifier</CE.Text>\n      <CodeExample src={ImageWithModifier} />\n\n      <CE.Text modifiers={[\"list-title\"]}>\n        <mark>Additional mixins:</mark>\n      </CE.Text>\n      <CE.List\n        modifiers={[\"disc\"]}\n        content={[\"<code>@nextByName</code>\", \"<code>@nextByModifier</code>\"]}\n      />\n      <CodeExample src={ImageOtherModifiers} />\n    </CE.Block>\n  );\n};\n","import \"./styles.scss\";\nimport { default as Index } from \"./template\";\n\nexport default Index;\n"],"names":["IndexPage","header","rawContent","modifiers","subHeader","textBlocks","title","text","caption","items","undefined","options","image","src","srcSet","xs","description","useGetData","pathToData","DATA_BY_PAGE","Layout","children","props","CE","config","tag","DocsContentHeader","className","content","CodeExample","TABS","TemplateByTab","HTML","ImageCE","ImageCE2","ImageTag","ImageModifier","ImageModifier1","ImageModifier2","ImageModifier3","ImageConfig","CSS","ImageByName","ImageByModifier","ImageWithModifier","ImageOtherModifiers","React","activeTabId","setActiveTabId","ActiveTabTemplate","listItemTemplate","tab","onClick","map"],"sourceRoot":""}