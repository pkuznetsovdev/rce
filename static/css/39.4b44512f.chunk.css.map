{"version":3,"file":"static/css/39.4b44512f.chunk.css","mappings":"AAwCE,mBC/BA,cADA,eADA,UAEA,CCDE,4BDIA,gBDHI,wBADF,4BCCJ,cADA,eADA,UAEA,CCDE,qCDIA,iBDKI,4BADF,6BCPJ,cADA,eADA,UAEA,CCDE,sCDIA,iBDHI,wBADF,4BCCJ,cADA,eADA,UAEA,CCDE,qCDIA,iBDKI,4BADF,6BCPJ,cADA,eADA,UAEA,CCDE,sCDIA,iBDHI,wBADF,4BCCJ,cADA,eADA,UAEA,CCDE,qCDIA,iBDKI,4BADF,6BCPJ,cADA,eADA,UAEA,CCDE,sCDIA,iBDHI,yBADF,4BCCJ,cADA,eADA,UAEA,CCDE,qCDIA,iBDKI,6BADF,6BCPJ,cADA,eADA,UAEA,CCDE,sCDIA,iBDHI,yBADF,4BCCJ,cADA,eADA,UAEA,CCDE,qCDIA,iBDKI,6BADF,6BCPJ,cADA,eADA,UAEA,CCDE,sCDIA,iBDHI,yBADF,6BCCJ,cADA,eADA,UAEA,CCDE,sCDIA,iBDKI,6BADF,8BCPJ,cADA,eADA,UAEA,CCDE,uCDIA,iBAOJ,YAGE,wBADA,yBADA,oBAEA","sources":["../node_modules/react-content-elements/dist/styles/utils/shared/mixins/modifiers.scss","custom/project-a/modules/code-example/styles.scss","../node_modules/react-content-elements/dist/styles/utils/shared/mixins/content-elements.scss"],"sourcesContent":["@use '../breakpoints' as *;\n@use '../content-elements' as *;\n\n@mixin withAboveAndBeyond {\n  @content;\n\n  @each $breakpoint-name, $breakpoint-value in $breakpoints {\n    &-above {\n      &-#{$breakpoint-name} {\n        @media (min-width: $breakpoint-value) {\n          @content;\n        }\n      }\n    }\n\n    &-beyond {\n      &-#{$breakpoint-name} {\n        @media (max-width: calc($breakpoint-value - 0.001px)) {\n          @content;\n        }\n      }\n    }\n  }\n}\n\n@mixin useModifier($modifier: string) {\n  @include withAboveAndBeyond {\n    @content;\n  }\n}\n\n@mixin withModifier($modifier: string) {\n  &#{$ce-base-name}--#{$modifier} {\n    @include useModifier($modifier) {\n      @content;\n    }\n  }\n}\n\n@mixin byModifier($modifier: string) {\n  #{$ce-base-name}--#{$modifier} {\n    @include useModifier($modifier) {\n      @content;\n    }\n  }\n}\n\n// TODO FAQ: How to make it work? Do we need it?\n// - create a root level css variable with selector\n// - provide content for the new selector by new css property\n//  We can define new custom names and generate content by using it's as a selector within 1 mixin\n//@mixin byName($ce-name: string) {\n//  :root {\n//    --#{$ce-base-name}-#{$ce-name}: '.#{$ce-base-name}-#{$ce-name}'\n//  }\n//\n//  #{var(--#{$ce-base-name}-#{$ce-name})} {\n//    @content\n//  }\n//}\n\n// .ce--accent {\n//   color: var(--ce-accent-color);\n// }\n// @media (min-width: 576px) {\n//   .ce--accent-above-xs {\n//     color: var(--ce-accent-color);\n//   }\n// }\n// @media (max-width: calc($breakpoint-value - 1px)) {\n//   .ce--accent-beyond-xs {\n//     color: var(--ce-accent-color);\n//   }\n// }\n// @media (min-width: 768px) {\n//   .ce--accent-above-sm {\n//     color: var(--ce-accent-color);\n//   }\n// }\n// @media (max-width: calc($breakpoint-value - 1px)) {\n//   .ce--accent-beyond-sm {\n//     color: var(--ce-accent-color);\n//   }\n// }\n// @media (min-width: 960px) {\n//   .ce--accent-above-md {\n//     color: var(--ce-accent-color);\n//   }\n// }\n// @media (max-width: calc($breakpoint-value - 1px)) {\n//   .ce--accent-beyond-md {\n//     color: var(--ce-accent-color);\n//   }\n// }\n// @media (min-width: 1248px) {\n//   .ce--accent-above-lg {\n//     color: var(--ce-accent-color);\n//   }\n// }\n// @media (max-width: calc($breakpoint-value - 1px)) {\n//   .ce--accent-beyond-lg {\n//     color: var(--ce-accent-color);\n//   }\n// }\n// @media (min-width: 1632px) {\n//   .ce--accent-above-xl {\n//     color: var(--ce-accent-color);\n//   }\n// }\n// @media (max-width: calc($breakpoint-value - 1px)) {\n//   .ce--accent-beyond-xl {\n//     color: var(--ce-accent-color);\n//   }\n// }\n// @media (min-width: 1920px) {\n//   .ce--accent-above-xxl {\n//     color: var(--ce-accent-color);\n//   }\n// }\n// @media (max-width: calc($breakpoint-value - 1px)) {\n//   .ce--accent-beyond-xxl {\n//     color: var(--ce-accent-color);\n//   }\n// }","@import \"react-content-elements/dist/styles/utils/shared\";\n\n\n$code-example-list: 'code-examples';\n$code-example: 'code-example';\n\n@include byModifier($code-example-list) {\n  width: 100%;\n  max-width: 100%;\n  margin: 0 auto;\n\n  @include byName('item') {\n    margin: 10px 0 0;\n  }\n}\n\n@include byModifier($code-example) {\n}\n\n.code-block {\n  width: auto !important;\n  max-width: 100% !important;\n  margin: 0 auto !important;\n}","@use '../content-elements' as *;\n\n@mixin byName($ce-name: '') {\n  @if ($ce-name == '') {\n    #{$ce-base-name} {\n      @content;\n    }\n  } @else {\n    #{$ce-base-name}-#{$ce-name} {\n      @content;\n    }\n  }\n}\n\n@mixin childByName($ce-name: '') {\n  @if ($ce-name == '') {\n    & > #{$ce-base-name} {\n      @content;\n    }\n  } @else {\n    & > #{$ce-base-name}-#{$ce-name} {\n      @content;\n    }\n  }\n}"],"names":[],"sourceRoot":""}